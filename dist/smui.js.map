{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///smui.js","webpack:///webpack/bootstrap 9ac62a88ca4bbff0c026","webpack:///./src/ui.js","webpack:///./src/smui.js","webpack:///./src/smui.transition.js","webpack:///./src/smui.transform.js","webpack:///./src/smui.history.js","webpack:///./src/smui.imagelazy.js","webpack:///./src/smui.fadeInOut.js","webpack:///./src/smui.layermask.js","webpack:///./src/smui.slider.js","webpack:///./src/smui.dialog.js","webpack:///./src/smui.carousel.js","webpack:///./src/smui.tab.js","webpack:///./src/smui.aside.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","ns","_createWidget","name","proto","_class","el","options","$el","$","key","cache","generateKey","length","Error","format","selector","version","data","newId","add","overrides","eventNS","__init","pluginPlaceholder","_trigger","isPlainObject","extend","prototype","Base","fn","fnList","plugin","attachPrototype","_name","isFunction","_init","args","slice","arguments","trigger","getPlugin","getOverrideFn","vendors","prop","styles","results","window","getComputedStyle","get","_prop","i","len","push","attr","_proto","proxy","createPlugin","plugins","bridge","old","toLowerCase","opts","obj","ret","_this","method","eq","undefined","apply","noConflict","val","rkey","remove","Event","on","callback","context","events","_events","off","filter","v","l","ev","isEmptyObject","Tools","S4","Math","random","toString","substring","substr","str","re","RegExp","replace","getWidgetInstance","isExistWidget","isExistWidgetInDom","ele","widget","createWidget","_args","concat","destroy","_destroy","setOption","arg","speed","property","easing","delay","css","setValue","isUndefined","setProperty","setDuration","setEasing","setDelay","transitionProperty","valProperty","_setValue","duration","result","isArray","is3d","support3D","translate","x","y","z","_build","scale","skew","rotate","unit","init","is3D","smui","renderTo","$els","me","find","eleHasHash","e","hashChange","h","each","_hash","getHash","indexOf","hash","location","$v","setTimeout","_h","type","effect","param","opacity","loading","isScrollLoad","lazy","$images","$imgs","$this","img","src","hide","Image","onerror","onload","fade","$obj","$loading","fadeInOut","parent","transition","flag","show","state","toggle","supportFadeInOut","z-index","position","top","left","bottom","right","display","background","_createMask","mask","isInit","appendTo","maskCss","direction","tackCursor","swipe","timeout","distance","moveDistance","supportSwipe","slope","point","start","sTime","_pos","isHorizontal","width","height","transform","touches","Date","now","current","_point","k","preventDefault","_tackCursor","resetPostion","_revisePosition","offset","swipeDistanceThreshold","isSwipe","isMove","changedTouches","goRightOrDown","goLeftOrUp","console","log","pos","wh","_moveTo","_outRange","$parent","moveTo","moveToElement","element","center","$ele","reviseValue","autoHide","modal","isModal","isAutoHide","layerMask","_hide","close","open","_show","slider","isAutoPlay","autoPlay","isLoop","loopSpeed","orientation","$items","$carouselList","$carouselContainer","orientationName","currentIndex","reviseIndex","$next","$prev","total","before","clone","append","_calculateListSize","sliderTo","next","prev","oe","_size","index","abs","containerSize","floor","ceil","callee","_reviseIndex","_i","_move","getNewIndex","n","supportHistory","$tab","$tabs","inArray","addClass","_switchTo","_openSlider","_openHistory","isSlider","history","tabs","triggerHistory","getTabByIndex","removeClass","switchTo","getIndex","getTabs","getCurrentTab","getLen","historyTool","offsetObj","_css","hoz","size","isLeft","symbol","ver","isTop","l2r","r2l","t2b","b2t","move","contentWrap","_initElement","$contentWrap","_translate","_displayContentWrap","_contentWrapOffsetObj"],"mappings":"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","file":"smui.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smui\"] = factory();\n\telse\n\t\troot[\"smui\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smui\"] = factory();\n\telse\n\t\troot[\"smui\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ns = __webpack_require__(1);\n\t__webpack_require__(2);\n\t__webpack_require__(3);\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(6);\n\t__webpack_require__(7);\n\t__webpack_require__(8);\n\t__webpack_require__(9);\n\t__webpack_require__(10);\n\t__webpack_require__(9);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\t\n\tmodule.exports = ns;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * smui.js v0.0.1\n\t * (c) 2015 Mingli Guo\n\t * Released under the MIT License.\n\t * @namespace smui\n\t * @type {Object}\n\t * @property {Object}  Event      给widget提供事件行为。也可以给其他对象提供事件行为\n\t * @property {Object}  Tools      smui工具对象\n\t * @property {Object}  Base       widget基类。不能直接使用\n\t */\n\tvar ns = {},\n\t    /*\n\t     **缓存组件。\n\t     */\n\t    cache = (function() {\n\t        var data = {};\n\t\n\t        return {\n\t            add: function(obj, name, val) {\n\t                var rkey = obj.data(this.generateKey(name));\n\t                data[rkey] = val;\n\t            },\n\t            get: function(obj, name) {\n\t                var rkey = obj.data(this.generateKey(name));\n\t                return data[rkey];\n\t            },\n\t            remove: function(obj, name) {\n\t                var rkey = obj.data(this.generateKey(name));\n\t                delete data[rkey];\n\t            },\n\t            generateKey: function(name) {\n\t                return name + 'Key';\n\t            }\n\t        }\n\t    })(),\n\t\n\t    format,\n\t    newId;\n\t\n\t\n\t\n\t/**\n\t * 给widget提供事件行为。也可以给其他对象提供事件行为\n\t * @module smui.Event\n\t * @alias smui.Event\n\t * @type {Object}\n\t */\n\tns.Event = {\n\t    /**\n\t     * 绑定事件。\n\t     * @method on\n\t     * @static\n\t     * @param  {String}   name     事件名\n\t     * @param  {Function} callback 事件处理器\n\t     * @param  {Object}   context  事件处理器的上下文。\n\t     * @return {self} 返回自身，方便链式\n\t     */\n\t    on: function(name, callback, context) {\n\t        var events;\n\t        if (!callback || typeof callback !== 'function') {\n\t            return this;\n\t        }\n\t        this._events = this._events || {};\n\t        events = name in this._events ? this._events[name] : this._events[name] = [];\n\t        if (name in this._events) {\n\t            events = this._events[name];\n\t        } else {\n\t            this._events[name] = [];\n\t            events = this._events[name];\n\t        }\n\t        events.push({\n\t            \"fn\": callback,\n\t            \"context\": context || this\n\t        });\n\t        return this;\n\t    },\n\t    /**\n\t     * 解除事件绑定\n\t     * @method off\n\t     * @static\n\t     *\n\t     * @param  {String}   name     事件名\n\t     * @param  {Function} callback 事件处理器\n\t     * @param  {Object}   context  事件处理器的上下文。\n\t     * @return {self} 返回自身，方便链式\n\t     * @chainable\n\t     */\n\t    off: function(name, callback, context) {\n\t        var events;\n\t        if (!name || !(name in this._events)) {\n\t            return this;\n\t        }\n\t\n\t        if (!callback || typeof callback !== 'function') {\n\t            return this;\n\t        }\n\t\n\t        if (events = this._events[name]) {\n\t            if (context = context || this) {\n\t                this._events[name] = events.filter(function(v) {\n\t                    return v.callback !== callback || context !== v.context;\n\t                });\n\t            }\n\t        }\n\t\n\t        return this;\n\t    },\n\t    _trigger: function(name) {\n\t        var args, events, i = -1,\n\t            l, ev;\n\t        if ($.isEmptyObject(this._events)) {\n\t            return this;\n\t        }\n\t        args = [].slice.call(arguments, 1);\n\t        events = this._events[name];\n\t        if (events) {\n\t            l = events.length;\n\t            while (++i < l) {\n\t                (ev = events[i]).fn.apply(ev.context, args);\n\t            }\n\t        }\n\t        return this;\n\t    },\n\t    /**\n\t     * 触发事件\n\t     * @method trigger\n\t     * @static\n\t     * @param  {String}   name     事件名\n\t     * @param  {*} * 任意参数\n\t     * @return {self} 返回自身，方便链式\n\t     * @chainable\n\t     */\n\t    trigger: function() {\n\t        return this._trigger.apply(this, [].slice.call(arguments, 0));\n\t    }\n\t}\n\t\n\t/**\n\t * smui工具对象\n\t * @module smui.Tools\n\t * @alias smui.Tools\n\t * @type {Object}\n\t */\n\tns.Tools = {\n\t    /**\n\t     * 用于生成唯一ID\n\t     * @method newId\n\t     * @static\n\t     * @return {String} 36位的ID 格式：XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n\t     */\n\t    newId: function() {\n\t        function S4() {\n\t            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n\t        }\n\t        return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase();\n\t\n\t    },\n\t    /**\n\t     * 格式化字符串\n\t     * @method format\n\t     * @static\n\t     * @param {String} str 格式化字符串\n\t     * @param {String}  *  任意字符\n\t     * @return {String} 格式化后的字符串\n\t     * @example\n\t     * smui.Tools.format('My name is {0}','Li Lei')\n\t     */\n\t    format: function() {\n\t        if (arguments.length == 0) return this;\n\t        var args = [].slice.call(arguments, 1),\n\t            str = arguments[0];\n\t        for (var i = 0; i < args.length; i++) {\n\t            var re = new RegExp('\\\\{' + i + '\\\\}', 'gm');\n\t            str = str.replace(re, args[i]);\n\t        }\n\t        return str;\n\t    }\n\t\n\t};\n\t\n\t\n\t/**\n\t * 根据组件名获取组件实例\n\t * @throws 若smui不存在指定的组件，则会抛出异常\n\t * @memberOf smui\n\t * @method getWidgetInstance\n\t * @param  {String} name 组件名\n\t * @param  {String} selector DOM选择器\n\t * @param  {Object} options  组件参数\n\t * @return {Object} 组织的实现对像\n\t * @example\n\t * var tab = smui.getWidgetInstance('tab','.smui-tab');\n\t */\n\tns.getWidgetInstance = function(name, selector, options) {\n\t        if (this.isExistWidget(name)) {\n\t            return new ns[name]($(selector), options || {});\n\t        } else {\n\t            throw new Error('There is no ' + name + 'Widget');\n\t        }\n\t    },\n\t\n\t    /**\n\t     * 判定某个组件是否存在\n\t     * @memberOf smui\n\t     * @method isExistWidget\n\t     * @param  {String}  name 组件名\n\t     * @return {Boolean}      smui存在组件则返回true\n\t     */\n\t    ns.isExistWidget = function(name) {\n\t        return name in ns;\n\t    },\n\t    /**\n\t     * 判定DOM上是否有指定的组件\n\t     * @memberOf smui\n\t     * @method isExistWidgetInDom\n\t     * @param  {String}  name 组件名\n\t     * @param  {Object}  ele  DOM对像\n\t     * @return {Boolean}      DOM存在组件则返回true\n\t     */\n\t    ns.isExistWidgetInDom = function(name, ele) {\n\t        var key = cache.generateKey(name);\n\t\n\t        return !!cache.get($(ele), key);\n\t    }\n\t\n\t\n\tformat = ns.Tools.format;\n\tnewId = ns.Tools.newId;\n\t\n\t\n\t/**\n\t *\n\t * 创建组件\n\t * @inner\n\t * @param name String 组件的名字\n\t * @param proto Object 组件的上的方法和属性\n\t */\n\tfunction _createWidget(name, proto) {\n\t    if (!$.isPlainObject(proto)) {\n\t        throw new Error('proto不是通过 \"{}\" 或者 \"new Object\" 创建的');\n\t    }\n\t\n\t    function _class(el, options) {\n\t        var $el = $(el),\n\t            key = cache.generateKey(name);\n\t\n\t        if ($el.length == 0) {\n\t            throw new Error(format('The {0} element does not exist', $el.selector));\n\t        }\n\t\n\t        this.$el = $el;\n\t\n\t        this.version = '0.0.1';\n\t\n\t        this.$el.data(key, $el.data(key) || newId());\n\t\n\t        cache.add($el, name, this);\n\t\n\t        this.name = name;\n\t\n\t        this.options = {};\n\t\n\t        //组件被覆写的方法\n\t        this.overrides = {};\n\t\n\t        //组件命名空间\n\t        this.eventNS = format('.{0}.widget.smui', name);\n\t\n\t        this.__init(proto, options);\n\t\n\t        this.pluginPlaceholder();\n\t\n\t        this._trigger('widgetReady');\n\t    }\n\t\n\t    $.extend(_class.prototype, ns.Base, {\n\t        __init: function(proto, options) {\n\t            var attr, fnList = _class.plugin,\n\t                _options = {},\n\t                fn;\n\t            //合并组件本身的options\n\t            $.extend(true, this.options, proto.options || {}, options || {});\n\t            _class.attachPrototype.call(this, proto);\n\t            //合并当前组件的插件的options并初始化插件\n\t            for (var _name in fnList) {\n\t                fn = fnList[_name];\n\t                if (fn) {\n\t                    $.extend(true, this.options, fn.options || {}, options || {});\n\t                    $.isFunction(fn._init) && fn._init.call(this);\n\t                    _class.attachPrototype.call(this, fn, fn.name);\n\t                }\n\t\n\t            }\n\t            //初始华组件\n\t            proto && $.isFunction(proto._init) && proto._init.call(this);\n\t\n\t\n\t        },\n\t        /*插件始化*/\n\t        pluginPlaceholder: function() {\n\t            var args = [].slice.call(arguments, 0);\n\t            this.trigger('initPlugin', args);\n\t        },\n\t        /*获取组件中的插件*/\n\t        getPlugin: function(name) {\n\t            return typeof name == 'undefined' ? _class.plugin : _class.plugin[name];\n\t        },\n\t        /*获取组件中被覆写的方法*/\n\t        getOverrideFn: function(name) {\n\t            return typeof name === 'string' ? this.overrides[name] : null;\n\t        },\n\t        vendors: function(prop) {\n\t\n\t            var styles, vendors, results;\n\t\n\t            styles = window.getComputedStyle(this.$el.get(0), null);\n\t\n\t            vendors = ['-webkit-', ''];\n\t\n\t            results = [];\n\t\n\t            for (var i = 0, len = vendors.length, _prop; i < len; i++) {\n\t                _prop = vendors[i] + prop;\n\t                if (_prop in styles) {\n\t                    results.push(_prop);\n\t                }\n\t            }\n\t\n\t            return results;\n\t        }\n\t\n\t    });\n\t\n\t\n\t    _class.plugin = {};\n\t    /*\n\t     ** 为组件附件方法\n\t     */\n\t    _class.attachPrototype = function(proto) {\n\t        var attr, prototype = _class.prototype,\n\t            overrides = this.overrides,\n\t            _proto;\n\t        for (attr in proto) {\n\t            if (attr != 'options' && attr != '_init') {\n\t                _proto = proto[attr];\n\t                if (attr in prototype && !(attr in overrides)) {\n\t                    overrides[attr] = $.isFunction(_proto) ? $.proxy(_proto, this) : _proto;\n\t                }\n\t                prototype[attr] = _proto;\n\t            }\n\t        }\n\t    };\n\t    /*\n\t     ** 为组件添加插件\n\t     */\n\t    _class.createPlugin = function(name, proto) {\n\t        var plugins = _class.plugin,\n\t            attr;\n\t        if (name && !(name in plugins)) {\n\t            plugins[name] = proto;\n\t        } else {\n\t            throw new Error(format('插件{0}已经存在或者插件的名字不能为空', name));\n\t        }\n\t    };\n\t\n\t    return _class;\n\t\n\t}\n\t\n\t\n\tns = $.extend(ns, {\n\t    /**\n\t     * 定义组件\n\t     * @memberOf smui\n\t     * @method widget\n\t     * @param  {String}  name 组件名\n\t     * @param  {Object}  proto 组件的Method\n\t     *\n\t     */\n\t    widget: function(name, proto) {\n\t        if (!name) return;\n\t        ns[name] = this.createWidget(name, proto);\n\t        bridge(name, ns);\n\t    },\n\t    createWidget: _createWidget\n\t});\n\t/*\n\t * widget基类。不能直接使用\n\t * @module smui.Base\n\t * @alias smui.Base\n\t * @type {Object}\n\t */\n\tns.Base = $.extend({}, ns.Event, {\n\t    trigger: function(name) {\n\t        var args = [].slice.call(arguments, 0),\n\t            _args = [];\n\t        if (this._events && name in this._events) {\n\t\n\t            _args.push(name);\n\t\n\t            this._trigger.apply(this, _args.concat(args[1]));\n\t        }\n\t        if (this.$el) {\n\t            this.$el.trigger.apply(this.$el, args);\n\t        }\n\t    },\n\t    destroy: function() {\n\t        this._destroy && typeof this._destroy === 'function' && this._destroy();\n\t        cache.remove(this.$el);\n\t        this.$el.off(this.eventNS);\n\t        this._events = [];\n\t    },\n\t    setOption: function() {\n\t        var args = [].slice.call(arguments, 0),\n\t            arg;\n\t        if (args.length == 0) {\n\t            return;\n\t        }\n\t        arg = arg[0];\n\t        if ($.isPlainObject(arg)) {\n\t            $.extend(this.options, arg);\n\t        } else if (typeof arg === 'string') {\n\t            if (args.length >= 2) {\n\t                this.options[arg] = args[1];\n\t            }\n\t        } else {\n\t            return;\n\t        }\n\t    }\n\t});\n\t\n\t/*\n\t **挂载组件到$.fn\n\t */\n\tfunction bridge(name, ns) {\n\t    var key = name.toLowerCase(),\n\t        old = $.fn[name];\n\t\n\t    $.fn[name] = function(opts) {\n\t        var args = [].slice.call(arguments, 1),\n\t            method = typeof opts === 'string' && opts || typeof opts === 'undefined' && 'this',\n\t            obj,\n\t            ret,\n\t            _this;\n\t\n\t\n\t        if (this.length > 0) {\n\t            _this = this.eq(0)\n\t        } else {\n\t            return this;\n\t        }\n\t\n\t        obj = cache.get(_this, name) || new ns[name](_this, $.isPlainObject(opts) ? opts : undefined);\n\t        if (method === 'this') {\n\t            ret = obj;\n\t\n\t        } else if (method) {\n\t            if (method in obj) {\n\t                if (typeof obj[method] !== 'function') {\n\t                    ret = obj[method];\n\t                } else {\n\t                    ret = obj[method].apply(obj, args);\n\t                }\n\t\n\t            } else {\n\t                throw new Error(name + '组件没有此方法或属性：' + method);\n\t            }\n\t            if (ret !== undefined && ret !== obj) {\n\t                return ret;\n\t            }\n\t            ret = undefined;\n\t        } else {\n\t\n\t        }\n\t        return ret !== undefined ? ret : _this;\n\t\n\t    };\n\t    //解决冲突\n\t    $.fn[name].noConflict = function() {\n\t        $.fn[name] = old;\n\t        return this;\n\t    }\n\t}\n\t    \n\t\n\tmodule.exports = ns;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author @author Guo Mingli(mingli.guo@shenma-inc.com)\n\t * @date 2015-1-20\n\t * @version 0.0.1\n\t * @file DOM元素的过渡属性\n\t * @class  smui.transition\n\t * @see  {@link http://www.w3cplus.com/content/css3-transition}\n\t * @import  zepto.js smui.js\n\t */\n\t\n\t\n\t\n\tvar ns = __webpack_require__(1);\n\t    ns.widget('transition', {\n\t        /**\n\t         * 设置组件初始化参数\n\t         * @type {Object}\n\t         * @memberOf smui.transform\n\t         * @instance\n\t         * @property {speed }  speed     参考CSS3 transition-duration\n\t         * @property {String}  property  参考CSS3 transition-property， 无素添加前缀\n\t         \n\t         * @property {String}  easing    参考CSS3 transition-timing-function\n\t         \n\t         * @property {Number}  delay     参考CSS3 transition-delay\n\t         \n\t         */\n\t        options: {\n\t            speed: 2000, //Number  过渡的时间（速度）\n\t\n\t            property: '', //String  要过渡的属性        \n\t\n\t            easing: 'ease', //String  缓动函数\n\t\n\t            delay: 100 //Number  淡隐淡出的延迟时间\n\t        },\n\t\n\t        /*\n\t         ** @description 初始化组件\n\t         */\n\t        _init: function() {\n\t            var $el = this.$el,\n\t\n\t                opts = this.options;\n\t\n\t            $el.css(this.setValue(opts.property, opts.speed, opts.easing, opts.delay));\n\t\n\t        },\n\t        setValue: function(prop, speed, easing, delay) {\n\t            !$.isUndefined(prop) && this.setProperty(prop);\n\t            !$.isUndefined(speed) && this.setDuration(speed);\n\t            !$.isUndefined(easing) && this.setEasing(easing);\n\t            !$.isUndefined(delay) && this.setDelay(delay);\n\t        },\n\t        /**\n\t         * 设置transition-property\n\t         * @param {String} prop css属性，参考transition-property\n\t         * @instance\n\t         * @memberOf smui.transition\n\t         */\n\t        setProperty: function(prop) {\n\t            var transitionProperty, valProperty;\n\t\n\t            transitionProperty = this.vendors('transition-property');\n\t\n\t            valProperty = this.vendors(prop);\n\t\n\t\n\t            this._setValue(transitionProperty, valProperty);\n\t\n\t\n\t        },\n\t        /**\n\t         * 设置transition-duration\n\t         * @param {Number} duration css属性，参考transition-duration\n\t         * @instance\n\t         * @memberOf smui.transition\n\t         */\n\t        setDuration: function(duration) {\n\t            var property;\n\t\n\t            property = this.vendors('transition-duration');\n\t\n\t            this._setValue(property, duration / 1000 + 's');\n\t        },\n\t        /**\n\t         * 设置transition-timing-function\n\t         * @param {String} easing css属性，参考transition-timing-function\n\t         * @instance\n\t         * @memberOf smui.transition\n\t         */\n\t        setEasing: function(easing) {\n\t            var property;\n\t\n\t            property = this.vendors('transition-timing-function');\n\t\n\t            this._setValue(property, easing || 'ease');\n\t        },\n\t        /**\n\t         * 设置transition-delay\n\t         * @param {String} delay css属性，参考transition-delay {@link }\n\t         * @instance\n\t         * @memberOf smui.transition\n\t         */\n\t        setDelay: function(delay) {\n\t            var property;\n\t\n\t            property = this.vendors('transition-delay');\n\t\n\t            this._setValue(property, delay / 1000 + 's');\n\t        },\n\t        _setValue: function(property, val) {\n\t            var result, isArray, i, len, $el;\n\t\n\t            i = 0;\n\t\n\t            len = property.length;\n\t\n\t            result = {};\n\t\n\t            $el = this.$el;\n\t\n\t            isArray = $.isArray(val);\n\t\n\t\n\t            for (; i < len; i++) {\n\t                result[property[i]] = isArray ? val[i] : val;\n\t            }\n\t\n\t            $el.css(result);\n\t\n\t        }\n\t\n\t\n\t\n\t    });\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file DOM元素的变形CSS\n\t * @author Guo Mingli(mingli.guo@shenma-inc.com)\n\t * @date 2015-1-20\n\t * @version 0.0.1\n\t * @class smui.transform \n\t * @see  {@link http://www.w3cplus.com/css3/css3-3d-transform.html}\n\t\n\t * @import  zepto.js smui.js \n\t */ \n\t\n\tvar ns = __webpack_require__(1);\n\t\n\t ns.widget('transform', {      \n\t        /**\n\t         * 设置组件初始化参数\n\t         * @type {Object}\n\t         * @memberOf smui.transform\n\t         * @instance\n\t         * @property {Boolean}  is3d   是否是3D版的属性，默认true        \n\t         */\n\t        options:{\n\t            is3d : true\n\t        },     \n\t\n\t        /*\n\t        ** @description 初始化组件        \n\t        */        \n\t        _init : function() {\n\t           \n\t            this.support3D = this.options.is3d;   \n\t\n\t            this.prop = this.vendors('transform');                    \n\t        },\n\t\n\t        _setValue: function(str){\n\t\n\t            var result, i, len, $el, property;\n\t\n\t            i        = 0;\n\t\n\t            property = this.prop;\n\t\n\t            len      = property.length;\n\t            \n\t            result   = {};\n\t            \n\t            $el      = this.$el;          \n\t\n\t\n\t            for (; i < len; i++) {\n\t\n\t                result[property[i]] = str;\n\t\n\t            }\n\t\n\t            $el.css(result);\n\t        },\n\t        /**\n\t         * 平移\n\t         * @param  {Number} x  用来指定元素X轴方向平移距离\n\t         * @param  {Number} y  用来指定元素Y轴方向平移距离\n\t         * @param  {Number} z  用来指定元素Z轴方向平移距离\n\t         * @instance\n\t         * @memberOf smui.transform\n\t         */\n\t        translate: function(x,y,z) {      \n\t\n\t            this._build('translate',x,y,z,'px',0);\n\t           \n\t        },\n\t        /**\n\t         * 缩放\n\t         * @param  {Number} x  横向缩放比例\n\t         * @param  {Number} y  纵向缩放比例\n\t         * @param  {Number} z  Z轴缩放比例\n\t         * @instance\n\t         * @memberOf smui.transform\n\t         */\n\t        scale: function(x,y,z) {\n\t          \n\t\n\t            this._build('scale',x,y,z,'',1);\n\t        },\n\t         /**\n\t         * 倾斜是二维变形，不能在三维空间变形。元素可能会在X轴和Y轴倾斜，然后转化为三维，但它们不能在Z轴倾斜。\n\t         * @param  {Number} x  用来指定元素X轴方向倾斜的角度。\n\t         * @param  {Number} y  用来指定元素Y轴方向倾斜的角度。         \n\t         * @instance\n\t         * @memberOf smui.transform\n\t         */\n\t        skew:function(x,y){\n\t            this._build('skew',x,y,undefined,'deg',0,false);\n\t        },\n\t        /**\n\t         * 旋转,旋转的量被定义为指定的角度；如果值为正值，元素围绕Y轴顺时针旋转；反之，如果值为负值，元素围绕Y轴逆时针旋转\n\t         * @param  {Number} x  元素围绕X轴旋转\n\t         * @param  {Number} y  元素围绕Y轴旋转\n\t         * @param  {Number} z  元素围绕Z轴旋转     \n\t         * @instance\n\t         * @memberOf smui.transform \n\t         */\n\t        rotate: function(x,y,z){\n\t      \n\t\n\t            this._build('rotate',x,y,z,'deg',0);\n\t        },\n\t\n\t        _build:function(prop,x,y,z,unit,init,is3D){\n\t             var str,format;\n\t\n\t             is3D = $.isUndefined(is3D) ? this.support3D :is3D;\n\t\n\t            if (is3D) {\n\t\n\t                format = prop + '3d({0},{1},{2})';\n\t            } else {\n\t\n\t                format = prop + '({0},{1})';\n\t            }\n\t            \n\t           \n\t            if (typeof x === 'undefined') {\n\t                x = init;\n\t            }\n\t            if (typeof y === 'undefined') {\n\t                y = init;\n\t            }\n\t            if (typeof z === 'undefined') {\n\t                z = init;\n\t            }\n\t\n\t            str = ns.Tools.format(format, x+unit, y+unit, z+unit);\n\t\n\t            this._setValue(str);\n\t        }\n\t\n\t\n\t\n\t    });\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file 用于实现组件与浏览器前进后退相关联,主要利用hashChange来实现\r\n\t * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n\t * @date 2015-01-20\r\n\t * @class smui.history\r\n\t * @version 0.0.1\r\n\t * @import smui.js\r\n\t */\r\n\t\r\n\t\r\n\tvar ns = smui = __webpack_require__(1);\r\n\tns.widget('history', {\r\n\t\r\n\t    options: {\r\n\t        renderTo: 'li'\r\n\t    },\r\n\t\r\n\t    _init: function() {\r\n\t\r\n\t        var $els, me, eventNS;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        eventNS = this.eventNS;\r\n\t\r\n\t        $els = this.$els = this.$el.find(this.options.renderTo);\r\n\t\r\n\t        this.eleHasHash();\r\n\t\r\n\t        $(window).on('hashchange', function(e) {\r\n\t\r\n\t            me.hashChange();\r\n\t\r\n\t        }).on('hash', function(e, h) {\r\n\t\r\n\t            if (h) {\r\n\t\r\n\t                $els.each(function(i, v) {\r\n\t\r\n\t                    var _hash = me.getHash($(this));\r\n\t\r\n\t                    if (_hash.indexOf('#') != 0) {\r\n\t\r\n\t                        _hash = '#' + _hash;\r\n\t\r\n\t                    }\r\n\t\r\n\t                    if (_hash == h) {\r\n\t\r\n\t                        $(this).trigger(\"history\", [i, h]);\r\n\t                    }\r\n\t\r\n\t                });\r\n\t            } else {\r\n\t\r\n\t                $els.eq(0).trigger(\"history\", [0, me.getHash($els.eq(0))]);\r\n\t\r\n\t            }\r\n\t            me.hash = h;\r\n\t\r\n\t        })\r\n\t\r\n\t        $els.off(eventNS).on('click' + eventNS, function(e) {\r\n\t            location.hash = me.getHash($(this));\r\n\t        });\r\n\t\r\n\t\r\n\t        this.hashChange();\r\n\t\r\n\t    },\r\n\t    /*\r\n\t     ** @description 检测是用户是否有data-hash,没有则用newId生成唯一hash\r\n\t     */\r\n\t    eleHasHash: function() {\r\n\t        var $els, me;\r\n\t\r\n\t        $els = this.$els;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        $els.each(function(i, v) {\r\n\t            var hash, $v;\r\n\t\r\n\t            $v = $(v);\r\n\t\r\n\t            hash = me.getHash($v);\r\n\t\r\n\t            if (!hash) {\r\n\t\r\n\t                $v.data('hash', ns.Tools.newId());\r\n\t\r\n\t            }\r\n\t\r\n\t        });\r\n\t\r\n\t    },\r\n\t\r\n\t    hashChange: function() {\r\n\t        var h = location.hash;\r\n\t\r\n\t        if (this.hash != h) {\r\n\t\r\n\t            //解决hashChange解发，但有些处理逻辑没有加载的问题，                \r\n\t            setTimeout(function() {\r\n\t                $(window).trigger('hash', h);\r\n\t            }, 16);\r\n\t\r\n\t        }\r\n\t    },\r\n\t\r\n\t    getHash: function($el) {\r\n\t        var _h = $el.data('hash') || $el.data('href');\r\n\t\r\n\t        return $.type(_h) === 'number' ? _h + '' : _h;\r\n\t    },\r\n\t    _destroy: function() {\r\n\t        $(window).off('hashchange').off('hash');\r\n\t    }\r\n\t\r\n\t});\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file 图片的懒加载\r\n\t * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n\t * @date 2015-01-20\r\n\t * @class smui.lazyImage \r\n\t * @version 0.0.1\r\n\t *\r\n\t * @example\r\n\t*       <div class=\"smui-lazy-img\"  >\r\n\t            <img data-lazy-img data-src=\"http://s2.zimgs.cn/ims?kt=url&amp;at=ori&amp;tv=0_0&amp;sign=yx:H04ZQvxARNg7plzPP0uv6kEXsgo=&amp;key=aHR0cDovL2E0LmF0dC5odWRvbmcuY29tLzA3Lzg4LzAxMzAwNTQyNTcwMzkwMTQwNzc1ODgwMDY4NTEzX3MuanBn&amp;x.jpg\">\r\n\t            <span class=\"loading\" data-img-loading> <i>正在加载</i>\r\n\t            </span>\r\n\t        </div>\r\n\t\r\n\t        $('body').lazyImage();\r\n\t\r\n\t */\r\n\t\r\n\t\r\n\tvar ns = __webpack_require__(1);\r\n\t\r\n\t__webpack_require__(6);\r\n\t\r\n\tns.widget('lazyImage', {\r\n\t    /**\r\n\t     * 设置组件初始化参数\r\n\t     * @type {Object}\r\n\t     * @memberOf smui.lazyImage\r\n\t     * @instance\r\n\t     * @property {Object}  effect     图片懒加载时的效果，目前暂时只有fade一种。\r\n\t     * @property {Object}  loading    图片loading的淡隐淡出参数\r\n\t     * @property {Boolean}   isScrollLoad 页面滚动时是否懒加载图片\r\n\t     */\r\n\t    options: {\r\n\t        effect: {\r\n\t            name: 'fade',\r\n\t\r\n\t            param: {\r\n\t\r\n\t                speed: 500, //Number  淡隐淡出的时间（速度）\r\n\t\r\n\t                opacity: [0, 1], //Array   淡隐淡出的透明度     \r\n\t\r\n\t                easing: 'ease', //String  缓动函数\r\n\t\r\n\t                delay: 100 //Number  淡隐淡出的延迟时间\r\n\t            }\r\n\t\r\n\t        },\r\n\t\r\n\t        loading: {\r\n\t            speed: 100, //Number  淡隐淡出的时间（速度）\r\n\t\r\n\t            opacity: [1, 0], //Array   淡隐淡出的透明度     \r\n\t\r\n\t            easing: 'ease', //String  缓动函数\r\n\t\r\n\t            delay: 0 //Number  淡隐淡出的延迟时间\r\n\t\r\n\t        },\r\n\t\r\n\t        isScrollLoad: false\r\n\t    },\r\n\t    /*\r\n\t     ** @description 初始化组件\r\n\t     */\r\n\t    _init: function() {\r\n\t\r\n\t        var me, $el, opts;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        opts.isScrollLoad && $(window).off(eventNS).on('scroll' + eventNS, function(e) {\r\n\t            me.lazy();\r\n\t        });\r\n\t\r\n\t        me.lazy();\r\n\t    },\r\n\t\r\n\t    lazy: function($images) {\r\n\t\r\n\t        var me, $imgs, opts, src;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        $imgs = ($images && $images.length > 0) ? $images : this.$el.find('[data-lazy-img]');\r\n\t\r\n\t        $imgs.each(function(i, v) {\r\n\t            var $this, img, src;\r\n\t\r\n\t            $this = $(v);\r\n\t\r\n\t            $this.hide();\r\n\t\r\n\t            img = new Image();\r\n\t\r\n\t            img.onerror = function() {\r\n\t\r\n\t                me.trigger('img-error', [v, src]);\r\n\t\r\n\t                $this.hide();\r\n\t            };\r\n\t\r\n\t            img.onload = function() {\r\n\t\r\n\t                $this.attr('src', src);\r\n\t\r\n\t                me[opts.effect.name]($this);\r\n\t\r\n\t                me.trigger('img-load', [v, src]);\r\n\t            };\r\n\t\r\n\t            src = $this.data('src');\r\n\t\r\n\t            if (src === '') {\r\n\t\r\n\t                $this.hide();\r\n\t\r\n\t            } else {\r\n\t\r\n\t                img.src = src;\r\n\t\r\n\t            }\r\n\t\r\n\t\r\n\t\r\n\t        });\r\n\t\r\n\t    },\r\n\t    fade: function($obj) {\r\n\t\r\n\t        var opts, $loading;\r\n\t\r\n\t        if (ns.isExistWidgetInDom('fadeInOut', $obj)) {\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        $obj.fadeInOut(opts.effect.param);\r\n\t\r\n\t        $obj.fadeInOut('show');\r\n\t\r\n\t        $loading = $obj.parent().find('[data-img-loading]');\r\n\t\r\n\t        $loading.fadeInOut(opts.loading);\r\n\t\r\n\t        $loading.fadeInOut('show');\r\n\t\r\n\t    },\r\n\t\r\n\t    _destroy: function() {\r\n\t\r\n\t        $(window).off(eventNS);\r\n\t\r\n\t    }\r\n\t\r\n\t\r\n\t});\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file 淡隐淡出效果\n\t * @author Guo Mingli(mingli.guo@shenma-inc.com)\n\t * @date 2015-01-20\n\t * @class smui.fadeInOut\n\t * @version 0.0.1\n\t * @import  zepto.js smui.js smui.transition.js\n\t */\n\t\n\tvar ns = __webpack_require__(1);\n\t\n\t__webpack_require__(2);\n\t\n\tns.widget('fadeInOut', {\n\t    /**\n\t     * 设置组件初始化参数\n\t     * @type {Object}\n\t     * @memberOf smui.fadeInOut\n\t     * @instance\n\t     * @property {String}  easing     缓动函数\n\t     * @property {Number}  speed      淡隐淡出的时间（速度）\n\t     * @property {Array}   opacity     淡隐淡出的透明度  [start,end]\n\t     * @property {Number}  delay     淡隐淡出的延迟时间\n\t     */\n\t    options: {\n\t        speed: 2000, //Number  淡隐淡出的时间（速度）\n\t\n\t        opacity: [0, 1], //Array   淡隐淡出的透明度     \n\t\n\t        easing: 'ease', //String  缓动函数\n\t\n\t        delay: 100 //Number  淡隐淡出的延迟时间\n\t\n\t\n\t    },\n\t    /*\n\t     ** @description 初始化组件\n\t     */\n\t    _init: function() {\n\t        var $el = this.$el,\n\t\n\t            me = this,\n\t\n\t            css = {};\n\t\n\t        opts = this.options;\n\t\n\t        $el.transition({\n\t\n\t            speed: opts.speed, //Number  过渡的时间（速度）\n\t\n\t            property: 'opacity', //String  要过渡的属性        \n\t\n\t            easing: opts.easing, //String  缓动函数\n\t\n\t            delay: opts.delay //Number  淡隐淡出的延迟时间\n\t\n\t        });\n\t\n\t        // css            = ns.tools.transition('opacity', opts.speed, opts.easing, opts.delay);\n\t\n\t        css['opacity'] = opts.opacity[0];\n\t\n\t        $el.css(css);\n\t\n\t        $el.off(this.eventNS).on('webkitTransitionEnd' + this.eventNS, function(e) {\n\t\n\t            var flag = $el.css('opacity') == opts.opacity[0];\n\t\n\t\n\t            /**\n\t             * 效果完成后触发\n\t             * @instance\n\t             * @memberOf smui.fadeInOut\n\t             * @event fadeCompleted\n\t             */\n\t            me.trigger('fadeCompleted', flag);\n\t\n\t        });\n\t    },\n\t    /**\n\t     * 淡入或淡出，由options.opacity确定\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.fadeInOut\n\t     * @fires fadeCompleted\n\t     */\n\t    show: function() {\n\t\n\t        var opts = this.options,\n\t\n\t            me = this;\n\t\n\t        //此处使用setTimeout用于解决不能淡入的效果，\n\t        //使用css3 transition改变透明度和display配合，会忽然transition的动画效果，所以此处使用定时器达到一个延迟动画的作用。            \n\t        setTimeout(function() {\n\t\n\t            me.$el.css({\n\t                'opacity': opts.opacity[1]\n\t\n\t            })\n\t\n\t        }, 16);\n\t\n\t        this.state = true;\n\t\n\t        this.$el.show();\n\t    },\n\t    /**\n\t     * 淡入或淡出，由options.opacity确定\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.fadeInOut\n\t     * @fires fadeCompleted\n\t     */\n\t    hide: function() {\n\t        var opts = this.options,\n\t\n\t            me = this;\n\t\n\t        me.$el.css({\n\t\n\t            'opacity': opts.opacity[0]\n\t\n\t        });\n\t\n\t        this.state = false;\n\t    },\n\t    /**\n\t     * 淡入或淡出，由options.opacity确定\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.fadeInOut\n\t     * @fires fadeCompleted\n\t     */\n\t    toggle: function() {\n\t\n\t        this.state ? this.hide() : this.show();\n\t    },\n\t    /**\n\t     * 释放内存\n\t     * @alias destroy\n\t     * @instance\n\t     * @memberOf smui.fadeInOut\n\t     */\n\t    _destroy: function() {\n\t\n\t        var $el = this.$el;\n\t\n\t        $el.transition('destroy');\n\t\n\t    }\n\t\n\t\n\t});\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file 遮罩效果\n\t * @author Guo Mingli(mingli.guo@shenma-inc.com)\n\t * @date 2015-1-20\n\t * @version 0.0.1\n\t * @class  smui.layerMask\n\t * @import smui.js smui.fadeInOut.js\n\t */\n\t\n\t\n\t\n\tvar ns = __webpack_require__(1);\n\t\n\tns.widget('layerMask', {\n\t    /**\n\t     * 设置组件初始化参数\n\t     * @type {Object}\n\t     * @memberOf smui.layerMask\n\t     * @instance\n\t     * @property {Object}   css              设置遮罩层的参数\n\t     * @property {Boolean}  supportFadeInOut 遮罩层是否支技淡隐淡出（依赖smui.fadeInOut.js）\n\t     * @property {Object}   fadeInOut        设置淡隐淡出的参数\n\t     */\n\t    options: {\n\t\n\t        supportFadeInOut: true, // Boolean 遮罩层是否支技淡隐淡出（依赖smui.fadeInOut.js）\n\t\n\t        fadeInOut: {\n\t\n\t            speed: 2000, // Number  遮罩层淡隐淡出的速度\n\t\n\t            easing: 'ease', // String  遮罩层淡隐淡出的缓动函数\n\t\n\t            opacity: [0, 0.7], // Array   遮罩层的透明度  \n\t\n\t            delay: 0 // Number  效果延迟时间\n\t        },\n\t        css: { // 遮罩层由代码生成，故其样式通过参数传入\n\t\n\t            \"z-index\": 9,\n\t\n\t            'position': 'fixed',\n\t\n\t            'top': 0,\n\t\n\t            'left': 0,\n\t\n\t            'bottom': 0,\n\t\n\t            'right': 0,\n\t\n\t            'display': 'none',\n\t\n\t            'opacity': 1,\n\t\n\t            'background': \"#000000\"\n\t        }\n\t\n\t    },\n\t    _init: function() {\n\t        var _css,\n\t\n\t            me = this,\n\t\n\t            eventNS = this.eventNS,\n\t\n\t            opts = this.options,\n\t\n\t            $el = this.$el,\n\t\n\t            fadeInOut = opts.fadeInOut;\n\t\n\t        this._createMask();\n\t\n\t        if (ns.isExistWidget('fadeInOut')) {\n\t\n\t            if (opts.supportFadeInOut) {\n\t\n\t                this.mask.fadeInOut(fadeInOut)\n\t\n\t                .on('fadeCompleted', function(e, isInit) {\n\t\n\t                    if (isInit) {\n\t\n\t                        me.mask.hide();\n\t\n\t                        me.trigger('maskClose', me.mask);\n\t\n\t                    }\n\t                });\n\t\n\t                $el.fadeInOut({\n\t\n\t                    opacity: [0, 1],\n\t\n\t                    speed: fadeInOut.speed,\n\t\n\t                    delay: fadeInOut.delay,\n\t\n\t                    easing: fadeInOut.easing\n\t\n\t\n\t                }).on('fadeCompleted', function(e, isInit) {\n\t                    if (isInit) {\n\t                        $el.hide();\n\t                    }\n\t                });\n\t            }\n\t        } else {\n\t            throw new Error('fadeInOut组件不存在');\n\t        }\n\t\n\t        this.mask.on('click' + eventNS, function(e) {\n\t            me.trigger('maskClick', e);\n\t        });\n\t    },\n\t    _createMask: function() {\n\t\n\t        var opts = this.options;\n\t\n\t        this.mask = $('<div/>').attr(\"id\", ns.Tools.newId()).appendTo('body');\n\t\n\t        this.mask.css(opts.css);\n\t    },\n\t    /**\n\t     * 显示遮罩层同时会把应用遮罩层的DOM显示出来\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.layerMask\n\t     * @fires fadeCompleted\n\t     */\n\t    show: function() {\n\t\n\t        var opts = this.options,\n\t\n\t            $el = this.$el,\n\t\n\t            maskCss = opts.css,\n\t\n\t            me = this;\n\t\n\t        /**\n\t         * 遮罩层显示前触发\n\t         * @instance\n\t         * @memberOf smui.layerMask\n\t         * @event maskBeforeLoad\n\t         * @event maskLoad\n\t         */\n\t        me.trigger('maskBeforeLoad');\n\t\n\t        this.state = true;\n\t\n\t        $el.css('z-index', maskCss['z-index'] + 1);\n\t\n\t        if (opts.supportFadeInOut) {\n\t\n\t            this.mask.fadeInOut('show');\n\t\n\t            $el.fadeInOut('show');\n\t\n\t        } else {\n\t\n\t            this.mask.show();\n\t\n\t            this.$el && this.$el.show();\n\t        }\n\t\n\t\n\t        /**\n\t         * 遮罩层显示后触发\n\t         * @instance\n\t         * @memberOf smui.layerMask\n\t         * @event maskLoad\n\t         */\n\t        this.trigger('maskLoad', $el);\n\t    },\n\t    /**\n\t     * 隐藏遮罩层同时会把应用遮罩层的DOM隐藏\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.layerMask\n\t     * @fires maskClose\n\t     */\n\t    hide: function() {\n\t        var me = this,\n\t\n\t            opts = this.options,\n\t\n\t            maskCss = opts.css,\n\t\n\t            initOpacity = maskCss.opacity[0],\n\t\n\t            $el = this.$el;\n\t\n\t        this.state = false;\n\t\n\t        if (opts.supportFadeInOut) {\n\t\n\t            $el.fadeInOut('hide');\n\t\n\t            this.mask.fadeInOut('hide');\n\t\n\t        } else {\n\t\n\t            this.mask.hide();\n\t\n\t            $el.hide();\n\t\n\t        }\n\t\n\t        /**\n\t         * 遮罩层关闭后触发\n\t         * @instance\n\t         * @memberOf smui.layerMask\n\t         * @event maskClose\n\t         */\n\t        me.trigger('maskClose', this.mask);\n\t\n\t    },\n\t    /**\n\t     * 显示或隐藏遮罩层\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.layerMask\n\t     *\n\t     */\n\t    toggle: function() {\n\t\n\t        this.state ? this.hide() : this.show();\n\t    },\n\t    /**\n\t     * 释放内存\n\t     * @alias destroy\n\t     * @instance\n\t     * @memberOf smui.layerMask\n\t     */\n\t    _destroy: function() {\n\t\n\t        this.mask.off(this.eventNS);\n\t\n\t        $el.fadeInOut('destroy');\n\t\n\t    }\n\t\n\t})\n\t__webpack_require__(6);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file 实现DOM元素的滑动\r\n\t * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n\t * @date 2015-1-20\r\n\t * @class smui.slider\r\n\t * @version 0.0.1\r\n\t * @import smui.js smui.transition.js smui.transform.js\r\n\t */\r\n\t\r\n\tvar ns = __webpack_require__(1),\r\n\t\r\n\t    tools = ns.Tools;\r\n\t\r\n\t__webpack_require__(3);\r\n\t\r\n\t__webpack_require__(2);\r\n\t\r\n\t\r\n\t\r\n\tns.widget('slider', {\r\n\t    /**\r\n\t     * 设置组件初始化参数\r\n\t     * @type {Object}\r\n\t     * @memberOf smui.slider\r\n\t     * @instance\r\n\t     * @property {String}   direction        方向, 默认水平。horizontal:水平方向，vertical:垂直方向\r\n\t     * @property {Boolean}  tackCursor       是否跟随光标/手指移动\r\n\t     * @property {Object}   transition       动画设置{speed:500,easing:'ease',delay:0}\r\n\t     * @property {Number}   moveDistance     slider移动的距离,默认为父节点的宽高\r\n\t     * @property {Boolean}  supportSwipe     是否支持swipe事件\r\n\t     * @property {Number}   slope            用于计算slider的有效区域，取值0-1,不推荐修改\r\n\t     * @property {Object}   swipe            swipe事件的触发临界值{timeout:500,distance:30}\r\n\t     */\r\n\t    options: {\r\n\t\r\n\t        direction: 'horizontal',\r\n\t\r\n\t        tackCursor: true,\r\n\t\r\n\t        transition: {\r\n\t\r\n\t            speed: 500,\r\n\t\r\n\t            easing: 'ease',\r\n\t\r\n\t            delay: 0\r\n\t        },\r\n\t\r\n\t        swipe: {\r\n\t\r\n\t            timeout: 500,\r\n\t\r\n\t            distance: 30\r\n\t\r\n\t        },\r\n\t\r\n\t        moveDistance: null,\r\n\t\r\n\t        supportSwipe: true,\r\n\t\r\n\t        slope: 0.5\r\n\t    },\r\n\t    _init: function() {\r\n\t\r\n\t        var me, opts, $el, eventNS, transitio, point, start, sTime, slope;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        transition = opts.transition;\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        slope = opts.slope;\r\n\t\r\n\t        //事件的命名空间\r\n\t        eventNS = this.eventNS;\r\n\t\r\n\t        //记录touch时的坐标，用于计算swipe的有效区域\r\n\t        point = {};\r\n\t\r\n\t        //记录现在的位置\r\n\t        this.position = 0;\r\n\t\r\n\t\r\n\t        this._pos = 0;\r\n\t\r\n\t        this.isHorizontal = opts.direction === 'horizontal';\r\n\t\r\n\t\r\n\t        this.moveDistance = opts.moveDistance || (this.isHorizontal ? $el.parent().width() : $el.parent().height())\r\n\t\r\n\t        //触屏时记录的点\r\n\t        if (this.isHorizontal) {\r\n\t\r\n\t            this.prop = 'clientX';\r\n\t\r\n\t        } else {\r\n\t\r\n\t            this.prop = 'clientY';\r\n\t\r\n\t        }\r\n\t\r\n\t        $el.transition({\r\n\t            speed: transition.speed, //Number  过渡的时间（速度）\r\n\t\r\n\t            property: 'transform', //String  要过渡的属性        \r\n\t\r\n\t            easing: transition.easing, //String  缓动函数\r\n\t\r\n\t            delay: transition.delay //Number  淡隐淡出的延迟时间\r\n\t        });\r\n\t\r\n\t        $el.transform({\r\n\t            is3d: true\r\n\t        })\r\n\t\r\n\t\r\n\t\r\n\t        $el.off(eventNS).on('touchstart' + eventNS, function(e) {\r\n\t\r\n\t            var touches;\r\n\t\r\n\t\r\n\t\r\n\t            touches = e.touches[0];\r\n\t\r\n\t            point = {\r\n\t                x: touches['clientX'],\r\n\t                y: touches['clientY']\r\n\t            };\r\n\t\r\n\t            sTime = Date.now();\r\n\t\r\n\t            start = touches[me.prop];\r\n\t\r\n\t\r\n\t            /**\r\n\t             * 元素触发touchstart事件是触发,这里用于组件利用t-start做扩展\r\n\t             * @instance\r\n\t             * @memberOf smui.slider\r\n\t             * @event t-start\r\n\t             */\r\n\t            me.trigger('t-start', [e, me.position]);\r\n\t\r\n\t        }).on('touchmove' + eventNS, function(e) {\r\n\t\r\n\t            var current, _point, k, touches;\r\n\t\r\n\t            touches = e.touches[0];\r\n\t\r\n\t            _point = {\r\n\t                x: touches['clientX'],\r\n\t                y: touches['clientY']\r\n\t            };\r\n\t\r\n\t            //计算直线的斜率(确定当前用户的滑动是否在有效的区域内)\r\n\t            k = (_point.y - point.y) / (_point.x - point.x);\r\n\t\r\n\t            current = touches[me.prop];\r\n\t\r\n\t            //水平方向的跟随\r\n\t            if (me.isHorizontal && k >= -slope && k <= slope) {\r\n\t                e.preventDefault()\r\n\t                me._tackCursor(start, current);\r\n\t            }\r\n\t\r\n\t            //垂直方向的跟随\r\n\t            if (!me.isHorizontal && (k > slope || k < -slope)) {\r\n\t                e.preventDefault()\r\n\t                me._tackCursor(start, current);\r\n\t            }\r\n\t\r\n\t            /**\r\n\t             * 元素触发touchmove事件是触发,这里用于组件利用t-move做扩展\r\n\t             * @instance\r\n\t             * @memberOf smui.slider\r\n\t             * @event t-move\r\n\t             */\r\n\t            me.trigger('t-move', [e, me.position, current - start > 0]);\r\n\t\r\n\t\r\n\t\r\n\t        }).on('touchend' + eventNS, function(e) {\r\n\t\r\n\t            var current, offset, swipeDistanceThreshold, isSwipe;\r\n\t\r\n\t            if (!me.isMove) return;\r\n\t\r\n\t            isSwipe = opts.supportSwipe && Date.now() - sTime < opts.swipe.timeout;;\r\n\t\r\n\t            me.isMove = false;\r\n\t\r\n\t            current = e.changedTouches[0][me.prop];\r\n\t\r\n\t            offset = current - start;\r\n\t\r\n\t            swipeDistanceThreshold = opts.swipe.distance;\r\n\t\r\n\t            if (isSwipe) {\r\n\t                //swiperight || swipedown\r\n\t                if (offset > swipeDistanceThreshold) {\r\n\t\r\n\t                    me.goRightOrDown(me.moveDistance);\r\n\t\r\n\t\r\n\t\r\n\t                    /**\r\n\t                     * swipe事件\r\n\t                     * @instance\r\n\t                     * @memberOf smui.slider\r\n\t                     * @event swipe\r\n\t                     * @example\r\n\t                     * $('slider').on('swipe',function(e,oe,pos,dir){\r\n\t                     *     //dir 是方向 1:right或down -1:up或left\r\n\t                     * })\r\n\t                     */\r\n\t                    me.trigger('swipe', [e, me.position, 1]);\r\n\t\r\n\t\r\n\t\r\n\t                } else if (offset <= swipeDistanceThreshold * (-1)) {\r\n\t\r\n\t                    me.goLeftOrUp(me.moveDistance);\r\n\t                    /**\r\n\t                     * left | up\r\n\t                     */\r\n\t                    me.trigger('swipeLeft', [e, me.position, -1]);\r\n\t\r\n\t                    console.log('up')\r\n\t\r\n\t                } else {\r\n\t                    resetPostion();\r\n\t                }\r\n\t            } else {\r\n\t                resetPostion();\r\n\t            }\r\n\t\r\n\t            function resetPostion() {\r\n\t                    if (!opts.tackCursor) return;\r\n\t                    me.position = me._pos;\r\n\t                    me._revisePosition();\r\n\t                }\r\n\t                /**\r\n\t                 * 元素触发touchend事件是触发,这里用于组件利用t-end做扩展\r\n\t                 * @instance\r\n\t                 * @memberOf smui.slider\r\n\t                 * @event t-end\r\n\t                 */\r\n\t            me.trigger('t-end', [e, me.position, current - start > 0]);\r\n\t        });\r\n\t\r\n\t    },\r\n\t    /**\r\n\t     * 向右或向下移动指定的距离\r\n\t     * @param  {Number} offset 移动的距离\r\n\t     * @public\r\n\t     * @instance\r\n\t     * @memberOf smui.slider\r\n\t     *\r\n\t     */\r\n\t    goRightOrDown: function(offset) {\r\n\t        this.position = this.position + offset;\r\n\t        this._revisePosition();\r\n\t    },\r\n\t    /**\r\n\t     * 向左或向上移动指定的距离\r\n\t     * @param  {Number} offset 移动的距离\r\n\t     * @public\r\n\t     * @instance\r\n\t     * @memberOf smui.slider\r\n\t     *\r\n\t     */\r\n\t    goLeftOrUp: function(offset) {\r\n\t        this.position = this.position - offset;\r\n\t        this._revisePosition();\r\n\t    },\r\n\t    /**\r\n\t     * 获取slider是否是水平方向移动\r\n\t     * @public\r\n\t     * @instance\r\n\t     * @memberOf smui.slider\r\n\t     *\r\n\t     */\r\n\t    isHorizontal: function() {\r\n\t        return this.isHorizontal;\r\n\t    },\r\n\t\r\n\t    /*\r\n\t     * 释放鼠标/touch时，对位置做出修正。\r\n\t     * @private\r\n\t     *\r\n\t     */\r\n\t    _revisePosition: function(pos, speed) {\r\n\t\r\n\t        var _pos, wh, $el;\r\n\t\r\n\t        _pos = $.isUndefined(pos) ? this.position : pos;\r\n\t\r\n\t\r\n\t        if (_pos > 0) {\r\n\t\r\n\t            this._moveTo(0, speed);\r\n\t            /**\r\n\t             * 在两端拉动完成触发\r\n\t             * @instance\r\n\t             * @memberOf smui.slider\r\n\t             * @event pulled\r\n\t             * @example\r\n\t             * $('.test').on('pulled',function(e,flag){\r\n\t             *     //flag = 1 是在顶部 或 左侧\r\n\t             *     //flag = 1 是在底部 或 右侧\r\n\t             * })\r\n\t             */\r\n\t            this.trigger('pulled', 1);\r\n\t\r\n\t        } else if (_pos < -(wh = this._outRange())) {\r\n\t\r\n\t\r\n\t            wh < 0 ? this._moveTo(0, speed) : this._moveTo(wh * (-1), speed);\r\n\t\r\n\t            this.trigger('pulled', -1);\r\n\t\r\n\t        } else {\r\n\t            this._moveTo(_pos, speed);\r\n\t        }\r\n\t\r\n\t        /*  function outRange(){\r\n\t\r\n\t              var $el,$parent;\r\n\t\r\n\t              $el     = this.$el;\r\n\t              \r\n\t              $parent = $el.parent();\r\n\t\r\n\t              return this.isHorizontal ? $el.width() - $parent.width() : $el.height() - $parent.height(); \r\n\t          }\r\n\t          console.log(this.position);*/\r\n\t    },\r\n\t    /**\r\n\t     * 用计算最大的移动位置\r\n\t     * @private\r\n\t     *\r\n\t     */\r\n\t    _outRange: function() {\r\n\t        var $el, $parent, wh;\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        $parent = $el.parent();\r\n\t\r\n\t        if (this.isHorizontal) {\r\n\t            wh = $el.width() - $parent.width();\r\n\t\r\n\t        } else {\r\n\t            wh = $el.height() - $parent.height();\r\n\t        }\r\n\t\r\n\t\r\n\t        return wh;\r\n\t    },\r\n\t\r\n\t    _moveTo: function(pos, speed) {\r\n\t\r\n\t        this.position = pos;\r\n\t\r\n\t\r\n\t        if (typeof speed != 'undefined' && typeof speed === 'number') {\r\n\t            /*this.$el.css({\r\n\t                '-webkit-transition-duration': speed / 1000 + 's',\r\n\t                'transition-duration': speed / 1000 + 's'\r\n\t            })*/\r\n\t            this.$el.transition('setDuration', speed / 1000);\r\n\t        } else {\r\n\t            this.transition();\r\n\t        }\r\n\t        this.translate(pos);\r\n\t\r\n\t        this.position = pos;\r\n\t    },\r\n\t    /**\r\n\t     * 移动到指定的位置\r\n\t     * @param  {Number} pos 移动到的位置\r\n\t     * @param  {Number} speed 移动的速度\r\n\t     * @public\r\n\t     * @instance\r\n\t     * @memberOf smui.slider\r\n\t     *\r\n\t     */\r\n\t    moveTo: function(pos, speed) {\r\n\t        this._revisePosition(pos, speed);\r\n\t    },\r\n\t\r\n\t    moveToElement: function(element, speed, center) {\r\n\t        var $ele, $el, offset, pos, _offset, $parent, reviseValue;\r\n\t\r\n\t        $ele = $(element);\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        offset = $ele.position();\r\n\t\r\n\t        pos = this.position - (this.isHorizontal ? offset.left : offset.top);\r\n\t\r\n\t\r\n\t        if (center) {\r\n\t\r\n\t            $parent = $el.parent();\r\n\t\r\n\t            if (this.isHorizontal) {\r\n\t\r\n\t                reviseValue = ($parent.width() - $ele.width()) / 2;\r\n\t\r\n\t            } else {\r\n\t                reviseValue = ($parent.height() - $ele.height()) / 2;\r\n\t            }\r\n\t\r\n\t            pos = pos + reviseValue;\r\n\t            console.log(pos);\r\n\t\r\n\t        }\r\n\t\r\n\t\r\n\t        this.moveTo(pos, speed);\r\n\t    },\r\n\t\r\n\t    _tackCursor: function(start, current) {\r\n\t\r\n\t        if (this.options.tackCursor) {\r\n\t\r\n\t            this._pos = this.position + current - start\r\n\t\r\n\t            this.transition(0);\r\n\t\r\n\t            this.translate(this._pos);\r\n\t\r\n\t            if (this._pos > 0) {\r\n\t                /**\r\n\t                 * 在两端拉动过程中触发\r\n\t                 * @instance\r\n\t                 * @memberOf smui.slider\r\n\t                 * @event pulling\r\n\t                 * @example\r\n\t                 * $('.test').on('pulling',function(e,flag){\r\n\t                 *     //flag = 1 是在顶部 或 左侧\r\n\t                 *     //flag = 1 是在底部 或 右侧\r\n\t                 * })\r\n\t                 */\r\n\t                this.trigger('pulling', 1);\r\n\t            } else if (this._pos < -(this._outRange())) {\r\n\t                this.trigger('pulling', -1);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        this.isMove = true;\r\n\t\r\n\t    },\r\n\t    /*\r\n\t     ** @description 为DOM添加过渡动画属性\r\n\t     */\r\n\t    transition: function(speed, easing, delay) {\r\n\t        var $el, transition, _tran, style;\r\n\t        $el = this.$el;\r\n\t        transition = this.options.transition;\r\n\t        speed = typeof speed == 'undefined' ? transition.speed : speed;\r\n\t        easing = typeof easing != 'string' ? transition.easing : easing;\r\n\t        delay = typeof delay == 'undefined' ? transition.delay : delay;\r\n\t\r\n\t\r\n\t        $el.transition('setValue', 'transform', speed, easing, delay);\r\n\t    },\r\n\t    /*\r\n\t     ** @description 为DOM添加平移属性\r\n\t     */\r\n\t    translate: function(offset) {\r\n\t        var $el;\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        this.isHorizontal ? $el.transform('translate', offset, 0, 0) : $el.transform('translate', 0, offset);\r\n\t        //css = this.isHorizontal ? tools.translate(offset) : tools.translate(0, offset);\r\n\t\r\n\t        //this.$el.css(css);\r\n\t    },\r\n\t    /**\r\n\t     * 释放内存\r\n\t     * @alias destroy\r\n\t     * @instance\r\n\t     * @memberOf smui.slider\r\n\t     */\r\n\t    _destroy: function() {\r\n\t\r\n\t        var $el = this.$el;\r\n\t\r\n\t        $el.transform('destroy');\r\n\t\r\n\t        $el.transition('destroy');\r\n\t\r\n\t    }\r\n\t\r\n\t\r\n\t});\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file 弹出框\r\n\t * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n\t * @date 2015-1-20\r\n\t * @version 0.0.1\r\n\t * @class smui.dialog\r\n\t * @import  zepto.js smui.js smui.layermadk.js\r\n\t */\r\n\t\r\n\t\r\n\t\r\n\tvar ns = __webpack_require__(1);\r\n\t\r\n\t__webpack_require__(7);\r\n\t\r\n\tns.widget('dialog', {\r\n\t    /**\r\n\t     * 设置组件初始化参数\r\n\t     * @memberOf smui.dialog\r\n\t     * @instance\r\n\t     * @type {Object}\r\n\t     * @property {Boolean}  autoHide    是否自动消失 ,若为true时，默认2000ms自动\r\n\t     * @property {Boolean}  modal       是否是模态,可以设置为{} 参数请参照smui.layermask\r\n\t     */\r\n\t    options: {\r\n\t\r\n\t        autoHide: false,\r\n\t\r\n\t        modal: false\r\n\t\r\n\t    },\r\n\t\r\n\t    /*\r\n\t     ** @description 初始化组件\r\n\t     */\r\n\t    _init: function() {\r\n\t        var $el, opts, eventNS, me;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        $el = this.$el\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        eventNS = this.eventNS;\r\n\t\r\n\t        modal = opts.modal;\r\n\t\r\n\t        autoHide = opts.autoHide;\r\n\t\r\n\t        this.isModal = !!modal;\r\n\t\r\n\t        this.isAutoHide = !!autoHide;\r\n\t\r\n\t        this.autoHide = $.type(autoHide) === 'number' ? autoHide : 2000;\r\n\t\r\n\t\r\n\t        if (this.isAutoHide) {\r\n\t            this.autoHide = autoHide\r\n\t        }\r\n\t\r\n\t        if (this.isModal) {\r\n\t            $el.layerMask($.isPlainObject(modal) ? modal : {});\r\n\t        }\r\n\t\r\n\t        $el.off(eventNS).on('click' + eventNS, '[data-confirm]', function() {\r\n\t\r\n\t            me._hide();\r\n\t            /**\r\n\t             * 点击确定时触发\r\n\t             * @instance\r\n\t             * @memberOf smui.dialog\r\n\t             * @event confirm\r\n\t             */\r\n\t            me.trigger('confirm');\r\n\t\r\n\t\r\n\t\r\n\t        }).on('click' + eventNS, '[data-cancel]', function() {\r\n\t\r\n\t            me._hide();\r\n\t            /**\r\n\t             * 点击取消时触发\r\n\t             * @instance\r\n\t             * @memberOf smui.dialog\r\n\t             * @event cancel\r\n\t             */\r\n\t            me.trigger('cancel');\r\n\t\r\n\t        }).on('click' + eventNS, '[data-close]', function() {\r\n\t\r\n\t            me.close();\r\n\t\r\n\t\r\n\t\r\n\t        })\r\n\t\r\n\t\r\n\t    },\r\n\t    /**\r\n\t     * 打开对话框，触发open事件\r\n\t     * @public\r\n\t     * @instance\r\n\t     * @memberOf smui.dialog\r\n\t     * @fires open\r\n\t     */\r\n\t    open: function() {\r\n\t        var me;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        this._show();\r\n\t\r\n\t        if (this.isAutoHide) {\r\n\t            setTimeout(function() {\r\n\t                me.hide();\r\n\t                me.trigger('close');\r\n\t            }, this.autoHide);\r\n\t        }\r\n\t        /**\r\n\t         * 对话框打开时触发\r\n\t         * @instance\r\n\t         * @memberOf smui.dialog\r\n\t         * @event open\r\n\t         */\r\n\t        me.trigger('open');\r\n\t    },\r\n\t\r\n\t    _show: function() {\r\n\t        if (this.isModal) {\r\n\t            this.$el.layerMask('show');\r\n\t        } else {\r\n\t            this.$el.show();\r\n\t        }\r\n\t    },\r\n\t\r\n\t    _hide: function() {\r\n\t        if (this.isModal) {\r\n\t            this.$el.layerMask('hide');\r\n\t        } else {\r\n\t            this.$el.hide();\r\n\t        }\r\n\t    },\r\n\t    /**\r\n\t     * 关闭对话框，触发close事件\r\n\t     * @public\r\n\t     * @instance\r\n\t     * @memberOf smui.dialog\r\n\t     * @fires close\r\n\t     */\r\n\t    close: function() {\r\n\t        this._hide();\r\n\t        /**\r\n\t         * dialog关闭时触发\r\n\t         * @instance\r\n\t         * @memberOf smui.dialog\r\n\t         * @event close\r\n\t         */\r\n\t        this.trigger('close');\r\n\t    },\r\n\t    /**\r\n\t     * 释放内存\r\n\t     * @alias destroy\r\n\t     * @instance\r\n\t     * @memberOf smui.dialog\r\n\t     */\r\n\t    _destroy: function() {\r\n\t\r\n\t        var $el = this.$el;\r\n\t\r\n\t        $el.layerMask('destroy');\r\n\t\r\n\t    }\r\n\t\r\n\t\r\n\t\r\n\t});\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file 轮播组件\r\n\t * @author Guo Mingli (mingli.guo@shenma-inc.com）\r\n\t * @date 2015-1-20\r\n\t * @version 0.0.1\r\n\t * @class smui.carousel\r\n\t */\r\n\t\r\n\tvar ns = __webpack_require__(1),\r\n\t\r\n\t    tools = ns.Tools;\r\n\t\r\n\t__webpack_require__(6);\r\n\t\r\n\t__webpack_require__(8);\r\n\t\r\n\t\r\n\tns.widget('carousel', {\r\n\t    /**\r\n\t     * 设置组件初始化参数\r\n\t     * @type {Object}\r\n\t     * @memberOf smui.carousel\r\n\t     * @instance\r\n\t     * @property {Object}   slider           选填,设置slider参数,请参照smui.slider组件\r\n\t     * @property {Boolean}  isAutoPlay       是否自动开始切换,若为true,则isLoop自动设为true\r\n\t     * @property {Object}   autoPlay         自动播放的参数{speed:500,direction:'r2l'}。 自动切换时的方向。l2r,r2l,t2b,b2t;\r\n\t     * @property {Number}   current          当前显示的索引 从0开始\r\n\t     * @property {Boolean}  isLoop           是否无缝循环切换\r\n\t     * @property {Number}   loopSpeed        无缝循环时，第一个和最后一个之前的切换时间\r\n\t     * @property {Boolean}  orientation      是否支持转屏时重新定位\r\n\t     */\r\n\t    options: {\r\n\t\r\n\t\r\n\t\r\n\t        slider: {\r\n\t            supportSwipe: false\r\n\t        },\r\n\t        isAutoPlay: false,\r\n\t\r\n\t        autoPlay: {\r\n\t\r\n\t            speed: 3000,\r\n\t\r\n\t            direction: 'l2r'\r\n\t        },\r\n\t\r\n\t\r\n\t        current: 0,\r\n\t\r\n\t        isLoop: false,\r\n\t\r\n\t        loopSpeed: 300,\r\n\t\r\n\t        orientation: true\r\n\t\r\n\t    },\r\n\t    _init: function() {\r\n\t        var opts, me, $el, $items, $carouselList, $carouselContainer, wh, eventNS, orientationName;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        eventNS = this.eventNS;\r\n\t\r\n\t        $carouselList = $el.find('[data-carousel-list]');\r\n\t\r\n\t        this.$carouselList = $carouselList;\r\n\t\r\n\t        $carouselContainer = $el.find('[data-carousel-container]');\r\n\t\r\n\t        this.$carouselContainer = $carouselContainer;\r\n\t\r\n\t        this.speed = this.loopSpeed; //opts.slider.transition && opts.slider.transition.speed || 500;\r\n\t\r\n\t        //当前索引\r\n\t        this.currentIndex = opts.current;\r\n\t\r\n\t        this.reviseIndex = null;\r\n\t\r\n\t        $items = $el.find('[data-carousel-item]');\r\n\t\r\n\t        this.$next = $el.find('[data-carousel-next]');\r\n\t\r\n\t        this.$prev = $el.find('[data-carousel-prev]');\r\n\t\r\n\t        this.total = $items.length - 1;\r\n\t\r\n\t        opts.isLoop = opts.isAutoPlay ? opts.isAutoPlay : opts.isLoop;\r\n\t\r\n\t\r\n\t        if (ns.isExistWidget('slider')) {\r\n\t\r\n\t            $carouselList.slider(opts.slider);\r\n\t\r\n\t            //是否水平方向轮放\r\n\t            this.isHorizontal = $carouselList.slider('isHorizontal');\r\n\t\r\n\t        } else {\r\n\t            throw new Error('The lack of dependent files \"smui.slider.js\"')\r\n\t        }\r\n\t\r\n\t\r\n\t        if (opts.isLoop) {\r\n\t\r\n\t            //克隆第一个元素和最后一个元素到列表中               \r\n\t\r\n\t            $items.eq(0).before($items.eq($items.length - 1).clone());\r\n\t\r\n\t            $carouselList.append($items.eq(0).clone());\r\n\t\r\n\t            this.total += 2;\r\n\t\r\n\t        }\r\n\t\r\n\t        this.$items = $el.find('[data-carousel-item]');\r\n\t        this._calculateListSize();\r\n\t\r\n\t\r\n\t        this.sliderTo(opts.isLoop ? this.currentIndex + 1 : this.currentIndex, 0);\r\n\t\r\n\t        $el.off(eventNS).on('click' + eventNS, '[data-carousel-next]', function(e) {\r\n\t\r\n\t            me.next();\r\n\t\r\n\t        }).on('click' + eventNS, '[data-carousel-prev]', function(e) {\r\n\t\r\n\t            me.prev();\r\n\t\r\n\t        }).on('t-end' + eventNS, '[data-carousel-list]', function(e, oe, pos, direction) {\r\n\t            var absPos, _size, index,\r\n\t\r\n\t                abs = Math.abs(pos);\r\n\t\r\n\t            _size = me.containerSize;\r\n\t\r\n\t            //根据位置计算当前索引\r\n\t            index = abs / _size;\r\n\t\r\n\t            if (direction) {\r\n\t                index = Math.floor(index);\r\n\t            } else {\r\n\t                index = Math.ceil(index);\r\n\t            }\r\n\t\r\n\t            me.index = index;\r\n\t\r\n\t            me.sliderTo(me.index);\r\n\t        });\r\n\t\r\n\t        //转屏重新定位\r\n\t        if (opts.orientation) {\r\n\t            orientationName = \"onorientationchange\" in window ? 'orientationchange' : 'resize';\r\n\t            $(window).off('window' + eventNS).on(orientationName + '.window' + eventNS, function(e) {\r\n\t\r\n\t                me._calculateListSize();\r\n\t                me.sliderTo(me.currentIndex);\r\n\t\r\n\t            });\r\n\t        }\r\n\t\r\n\t        //自动播发\r\n\t        if (opts.isAutoPlay) {\r\n\t\r\n\t            setTimeout(function() {\r\n\t\r\n\t                if (opts.autoPlay.direction == 'l2r' || opts.autoPlay.direction === 't2b') {\r\n\t                    me.next();\r\n\t                } else {\r\n\t                    me.prev();\r\n\t                }\r\n\t                setTimeout(arguments.callee, opts.autoPlay.speed);\r\n\t\r\n\t            }, opts.autoPlay.speed);\r\n\t        }\r\n\t\r\n\t\r\n\t    },\r\n\t\r\n\t    _reviseIndex: function() {\r\n\t        var _i, me;\r\n\t        me = this;\r\n\t        _i = me.reviseIndex;\r\n\t        if (typeof _i != 'undefined') {\r\n\t            // _size = me.containerSize;\r\n\t            //me.$carouselList.slider('moveTo', (_size * _i) * -1, 0);\r\n\t            setTimeout(function() {\r\n\t                me._move(_i, 0);\r\n\t                setTimeout(function() {\r\n\t                    me.$carouselList.transition('setDuration', me.speed);\r\n\t                    /*{\r\n\t                                               '-webkit-transition-duration': me.speed / 1000 + 's'\r\n\t                                           })*/\r\n\t                }, 100);\r\n\t            }, 300);\r\n\t\r\n\t        }\r\n\t    },\r\n\t\r\n\t    _move: function(i, speed) {\r\n\t        var _size, pos, opts, _i, me;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        _size = this.containerSize;\r\n\t\r\n\t        pos = _size * i;\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        this.currentIndex = i;\r\n\t\r\n\t        this.$carouselList.slider('moveTo', -pos, speed);\r\n\t    },\r\n\t    /**\r\n\t     * 切换到指定索引位置\r\n\t     * @memberOf smui.carousel\r\n\t     * @instance\r\n\t     * @param  {Number} i 轮播索引\r\n\t     * @param  {Number} speed 指定的切换动画时间。\r\n\t     * @fires  slider\r\n\t     */\r\n\t    sliderTo: function(i, speed) {\r\n\t\r\n\t        var _size, pos, opts, _i, me;\r\n\t\r\n\t        _size = this.containerSize;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        this._move(i, speed);\r\n\t\r\n\t        //无缝循环切换时，要计算新的index\r\n\t        if (opts.isLoop) {\r\n\t\r\n\t            _i = getNewIndex(i);\r\n\t\r\n\t            this.reviseIndex = _i != i ? _i : undefined;\r\n\t        } else {\r\n\t\r\n\t            this.reviseIndex = undefined;\r\n\t\r\n\t            if (i == 0) {\r\n\t                this.$prev.hide();\r\n\t            } else if (i == this.total) {\r\n\t                this.$next.hide();\r\n\t            } else {\r\n\t                this.$prev.show();\r\n\t                this.$next.show();\r\n\t            }\r\n\t\r\n\t        }\r\n\t\r\n\t        me._reviseIndex();\r\n\t\r\n\t\r\n\t        /**\r\n\t         * 轮播切换时触发\r\n\t         * @instance\r\n\t         * @memberOf smui.carousel\r\n\t         * @event slider\r\n\t         */\r\n\t        me.trigger('slider', opts.isLoop ? (me.reviseIndex || this.currentIndex) - 1 : this.currentIndex);\r\n\t\r\n\t        function getNewIndex(n) {\r\n\t            if (n == me.total) {\r\n\t                return 1;\r\n\t            }\r\n\t\r\n\t            if (n == 0) {\r\n\t                return me.total - 1;\r\n\t            }\r\n\t\r\n\t            return n;\r\n\t        }\r\n\t\r\n\t    },\r\n\t    /**\r\n\t     * 切换到下一个索引位置\r\n\t     * @memberOf smui.carousel\r\n\t     * @instance\r\n\t     * @fires  slider\r\n\t     */\r\n\t    next: function() {\r\n\t        var i;\r\n\t        i = this.currentIndex + 1;\r\n\t        if (i > this.total) {\r\n\t            i = this.total;\r\n\t        }\r\n\t        i != this.currentIndex && this.sliderTo(i);\r\n\t    },\r\n\t    /**\r\n\t     * 切换到上一个索引位置\r\n\t     * @memberOf smui.carousel\r\n\t     * @instance\r\n\t     * @fires  slider\r\n\t     */\r\n\t    prev: function() {\r\n\t        var i;\r\n\t        i = this.currentIndex - 1;\r\n\t        if (i < 0) {\r\n\t            i = 0;\r\n\t        }\r\n\t        i != this.currentIndex && this.sliderTo(i);\r\n\t    },\r\n\t\r\n\t    _calculateListSize: function($items) {\r\n\t\r\n\t        var opts, len, size, _size, prop, $items;\r\n\t\r\n\t        $items = this.$items;\r\n\t\r\n\t        len = $items.length;\r\n\t\r\n\t        prop = this.isHorizontal ? \"width\" : \"height\";\r\n\t\r\n\t        _size = this.$carouselContainer[prop]();\r\n\t\r\n\t        this.containerSize = _size;\r\n\t\r\n\t        $items[prop](_size);\r\n\t\r\n\t        this.$carouselList[prop](_size * len);\r\n\t\r\n\t\r\n\t    },\r\n\t    /**\r\n\t     * 释放内存\r\n\t     * @alias destroy\r\n\t     * @instance\r\n\t     * @memberOf smui.carousel\r\n\t     */\r\n\t    _destroy: function() {\r\n\t\r\n\t        var eventNS = this.eventNS;\r\n\t\r\n\t        $(window).off('window' + eventNS);\r\n\t\r\n\t        this.$carouselList.slider('destroy');\r\n\t    }\r\n\t\r\n\t\r\n\t});\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file tab组件或Navigator组件，具体可由css来控制，如果[data-items]的宽度或高度小于或等于.smui-tab的宽或高的话，slider的滑动会失效\r\n\t * @author Guo Mingli (mingli.guo@shenma-inc.com）\r\n\t * @date 2015-1-20\r\n\t \r\n\t * @version 0.0.1 \r\n\t * @class smui.tab  \r\n\t * \r\n\t **/\r\n\t\r\n\t\r\n\tvar ns = __webpack_require__(1);\r\n\t__webpack_require__(8);\r\n\t__webpack_require__(4);\r\n\tns.widget('tab', {\r\n\t\r\n\t    /**\r\n\t     * 设置组件初始化参数\r\n\t     * @memberOf smui.tab\r\n\t     * @instance\r\n\t     * @type {Object}\r\n\t     * @property {String}  current              当前选中项的标示\r\n\t     * @property {null | Object}  slider        是否支持滑动 具体参数值参考smui.slider.js\r\n\t     * @property {boolean}  supportHistory      是否支持选项卡与浏览器历史的前进后退关联在一起\r\n\t     */\r\n\t    options: {\r\n\t        current: 'current',\r\n\t\r\n\t        slider: null,\r\n\t\r\n\t        supportHistory: false\r\n\t    },\r\n\t    /**\r\n\t     * 初始化组件\r\n\t     * @private\r\n\t     * @memberOf smui.tab\r\n\t     */\r\n\t    _init: function() {\r\n\t\r\n\t        var me, $el, opts, eventNS, current;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        opts = me.options;\r\n\t\r\n\t        eventNS = me.eventNS;\r\n\t\r\n\t        current = opts.current.replace(/^\\./, ''),\r\n\t\r\n\t            this.$tab = $el.find('[data-items]')\r\n\t\r\n\t        this.$tabs = $el.find('[data-item]');\r\n\t\r\n\t        //根据用户设定的当前标示，设定当前索引\r\n\t        this.index = $.inArray($el.find('.' + current).get(0), this.$tabs);\r\n\t\r\n\t        //如果用户没有指定当前标示，则默认选中第一个\r\n\t        if (this.index === -1) {\r\n\t\r\n\t            this.$tabs.eq(0).addClass('current');\r\n\t\r\n\t            this.index = 0;\r\n\t\r\n\t        }\r\n\t\r\n\t\r\n\t        $el.off(eventNS).on('click' + eventNS, '[data-Item]', function(e) {\r\n\t            /* me.$tab.slider('moveToElement',$(this));*/\r\n\t            !opts.supportHistory && me._switchTo($(this).index(), e);\r\n\t\r\n\t        });\r\n\t\r\n\t        //支持slider,则注册。\r\n\t        if ($.isPlainObject(opts.slider)) {\r\n\t\r\n\t            me._openSlider(opts.slider);\r\n\t\r\n\t        }\r\n\t\r\n\t        if (opts.supportHistory) {\r\n\t            me._openHistory();\r\n\t        }\r\n\t    },\r\n\t\r\n\t    /**\r\n\t     * 使组件支持slider\r\n\t     * @private\r\n\t     */\r\n\t    _openSlider: function(options) {\r\n\t        var $el, opts, $tab, eventNS, me;\r\n\t\r\n\t        me = this;\r\n\t\r\n\t        $el = this.$el;\r\n\t\r\n\t        opts = this.options;\r\n\t\r\n\t        $tab = this.$tab;\r\n\t\r\n\t        eventNS = this.eventNS;\r\n\t\r\n\t        if (!this.isSlider) {\r\n\t            $tab.slider(options || {});\r\n\t\r\n\t            $tab.off(eventNS).on('t-start' + eventNS, function(e, pos, flag) {\r\n\t\r\n\t                me.trigger('t-start', [pos, flag]);\r\n\t\r\n\t            }).on('t-move' + eventNS, function(e, pos, flag) {\r\n\t\r\n\t                me.trigger('t-start', [pos, flag]);\r\n\t\r\n\t            }).on('t-end' + eventNS, function(e, pos, flag) {\r\n\t\r\n\t                me.trigger('t-end', [pos, flag]);\r\n\t\r\n\t            }).on('swipeRight' + eventNS, function(e, pos) {\r\n\t\r\n\t                me.trigger('swipeRight', pos);\r\n\t\r\n\t            }).on('swipeLeft' + eventNS, function(e, pos) {\r\n\t\r\n\t                me.trigger('swipeLeft', pos);\r\n\t\r\n\t            }).on('pulling' + eventNS, function(e, flag) {\r\n\t                console.log(flag);\r\n\t            }).on('pulled' + eventNS, function(e, flag) {\r\n\t                console.log(flag);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        this.isSlider = true;\r\n\t    },\r\n\t    /**\r\n\t     * 使得选项卡与浏览器历史的前进后退关联在一起\r\n\t     * @private\r\n\t     */\r\n\t    _openHistory: function() {\r\n\t        var me, $el, eventNS;\r\n\t\r\n\t        me = this,\r\n\t\r\n\t            $el = this.$el,\r\n\t\r\n\t            eventNS = this.eventNS;\r\n\t\r\n\t        me.history = true;\r\n\t\r\n\t        if (ns.isExistWidget('history')) {\r\n\t\r\n\t            $el.history();\r\n\t\r\n\t            $el.on('history' + eventNS, this.options.tabs, function(e, i, h) {\r\n\t\r\n\t                me._switchTo(i, e);\r\n\t\r\n\t            });\r\n\t            //$el.history('hashChange');              \r\n\t\r\n\t        } else {\r\n\t            throw new Error('The lack of dependent files smui.history.js');\r\n\t        }\r\n\t    },\r\n\t    /**\r\n\t     * 切换到指定的选项\r\n\t     * @private\r\n\t     * @param {Number} index 序号\r\n\t     *\r\n\t     */\r\n\t    _switchTo: function(i, e, triggerHistory) {\r\n\t        var me = this,\r\n\t            $scope = this.$el,\r\n\t            opts = me.options,\r\n\t            current = opts.current.replace(/^\\./, ''),\r\n\t            eventNS = this.eventNS,\r\n\t            $tab = me.getTabByIndex(i);\r\n\t\r\n\t\r\n\t\r\n\t        if ($tab.length == 0) {\r\n\t            throw new Error('The tab index is out of range');\r\n\t        }\r\n\t\r\n\t        $.isPlainObject(opts.slider) && me.$tab.slider('moveToElement', $tab, null, true);\r\n\t\r\n\t        this.index = i;\r\n\t\r\n\t        /**\r\n\t         * 切换tab完成前触发\r\n\t         * @event beforeSelect\r\n\t         * @memberOf smui.tab\r\n\t         */\r\n\t        me.trigger('beforeSelect', [$tab, i]);\r\n\t\r\n\t        me.$tabs.removeClass(current);\r\n\t\r\n\t\r\n\t        //\r\n\t\r\n\t        $tab.addClass(current);\r\n\t\r\n\t        /**\r\n\t         * 切换tab完成后触发\r\n\t         * @event select\r\n\t         * @instance\r\n\t         * @memberOf smui.tab\r\n\t         */\r\n\t        me.trigger('select', [$tab, i]);\r\n\t    },\r\n\t    /**\r\n\t     * 切换到导航栏的某一项\r\n\t     * @param {Number} index 序号\r\n\t     * @public\r\n\t     * @instance\r\n\t     * @fires beforeSelect\r\n\t     * @fires select\r\n\t     * @memberOf smui.tab\r\n\t     * @example\r\n\t     * $('.smui-tab').tab(\"switchTo\",3);\r\n\t     * //或\r\n\t     * var tab = new smui.tab($('.smui-tab'),{});\r\n\t     * tab.switchTo(3);\r\n\t     */\r\n\t    switchTo: function(index) {\r\n\t        return this._switchTo(index);\r\n\t    },\r\n\t    /**\r\n\t     * 获取当前选中的序号\r\n\t     * @memberOf smui.tab\r\n\t     * @instance\r\n\t     * @return {Number} 当前选中项的索引\r\n\t     */\r\n\t    getIndex: function() {\r\n\t        return this.index;\r\n\t    },\r\n\t    /**\r\n\t     * 获取所有的tab\r\n\t     * @memberOf smui.tab\r\n\t     * @instance\r\n\t     * @return {Array} 所有的tab\r\n\t     */\r\n\t    getTabs: function() {\r\n\t        return this.$tabs;\r\n\t    },\r\n\t    /**\r\n\t     * 根据索引号获取tab\r\n\t     * @memberOf smui.tab\r\n\t     * @instance\r\n\t     * @param  {Number} i 索引号\r\n\t     * @return {Object}   指定的tab的DOM对像\r\n\t     */\r\n\t    getTabByIndex: function(i) {\r\n\t        var tabs = this.$tabs;\r\n\t        if (i > tabs.length || i < 0) {\r\n\t            return null;\r\n\t        }\r\n\t        return tabs.eq(i);\r\n\t    },\r\n\t    /**\r\n\t     * 获取当前tab\r\n\t     * @memberOf smui.tab\r\n\t     * @instance\r\n\t     * @return {Object} 当前tab的DOM对像\r\n\t     */\r\n\t    getCurrentTab: function() {\r\n\t        var index = this.getIndex();\r\n\t        return this.getTabByIndex(index);\r\n\t    },\r\n\t    /**\r\n\t     * 切换至下一个tab\r\n\t     * @instance\r\n\t     * @memberOf smui.tab\r\n\t     */\r\n\t    next: function() {\r\n\t        var index = this.getIndex() + 1\r\n\t            //index < this.getLen() && this.switchTo(index);\r\n\t            //\r\n\t        index < this.getLen() && this.getTabByIndex(index).trigger('click');\r\n\t\r\n\t    },\r\n\t    /**\r\n\t     * 切换至上一个tab\r\n\t     * @instance\r\n\t     * @memberOf smui.tab\r\n\t     */\r\n\t    prev: function() {\r\n\t        var index = this.getIndex() - 1\r\n\t            //index >= 0 && this.switchTo(index);\r\n\t        index >= 0 && this.getTabByIndex(index).trigger('click');\r\n\t    },\r\n\t    /**\r\n\t     * 获取tab的个数\r\n\t     * @instance\r\n\t     * @memberOf smui.tab\r\n\t     */\r\n\t    getLen: function() {\r\n\t        return this.getTabs().length;\r\n\t    },\r\n\t    /**\r\n\t     * 释放内存\r\n\t     * @alias destroy\r\n\t     * @instance\r\n\t     * @memberOf smui.tab\r\n\t     */\r\n\t    _destroy: function() {\r\n\t        var eventNS = this.eventNS;\r\n\t\r\n\t        this.$tab.off(eventNS);\r\n\t\r\n\t        this.historyTool && this.historyTool.destroy();\r\n\t\r\n\t        this.isSlider && this.$tab.slider('destroy');\r\n\t    }\r\n\t});\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file 弹出式侧边栏\n\t * @author Guo Mingli (mingli.guo@shenma-inc.com）\n\t * @date 2015-1-20\n\t * @version 0.0.1\n\t * @class smui.aside\n\t * @example\n\t * //Html代码\n\t * <div class = 'aside'>\n\t *     //你的侧边栏内容\n\t * </div>\n\t * //Js代码\n\t * $('.aside').aside()\n\t *\n\t * // 或者使用实例化对像的方式\n\t *\n\t * var aside = new smui.aside($('.aside'),{});\n\t *\n\t **/\n\t\n\tvar ns = __webpack_require__(1);\n\t\n\t__webpack_require__(3);\n\t__webpack_require__(2);\n\t__webpack_require__(7);\n\t\n\tvar offsetObj = function($el, _css) {\n\t\n\t    var css = {};\n\t\n\t    _css = $.isPlainObject(_css) ? _css : {};\n\t\n\t    return {\n\t\n\t        hoz: function(size, isLeft) {\n\t\n\t            var distance, symbol;\n\t\n\t\n\t            css = {\n\t\n\t                'top': _css.top || '0px',\n\t\n\t                'bottom': _css.bottom || '0px',\n\t\n\t                'width': size || $el.width()\n\t\n\t            }\n\t            if (isLeft) {\n\t\n\t                css['left'] = '0px';\n\t\n\t                symbol = -1;\n\t            } else {\n\t                css['right'] = '0px';\n\t\n\t                symbol = 1;\n\t            }\n\t\n\t            $el.css(css);\n\t\n\t            distance = symbol * $el.width();\n\t\n\t            $el.transform('translate', distance);\n\t\n\t\n\t            return distance;\n\t\n\t        },\n\t\n\t        ver: function(size, isTop) {\n\t\n\t            var distance;\n\t\n\t            /*$.extend(css, {\n\t\n\t                'left': '0px',\n\t\n\t                'right': '0px',\n\t\n\t                'height': size || $el.height()\n\t\n\t            });*/\n\t\n\t            css = {\n\t\n\t                'left': _css.left || '0px',\n\t\n\t                'right': _css.right || '0px',\n\t\n\t                'height': size || $el.height()\n\t\n\t\n\t            }\n\t\n\t\n\t            if (isTop) {\n\t\n\t                css['top'] = '0px';\n\t\n\t                symbol = -1;\n\t\n\t            } else {\n\t\n\t                css['bottom'] = '0px';\n\t\n\t                symbol = 1;\n\t            }\n\t\n\t            distance = symbol * $el.height();\n\t\n\t\n\t\n\t            $el.transform('translate', 0, distance);\n\t\n\t            $el.css(css);\n\t\n\t            return distance;\n\t\n\t        },\n\t\n\t        l2r: function(size) {\n\t            return this.hoz(size, true);\n\t\n\t        },\n\t\n\t        r2l: function(size) {\n\t            return this.hoz(size, false);\n\t\n\t        },\n\t\n\t        t2b: function(size) {\n\t            return this.ver(size, true);\n\t\n\t        },\n\t\n\t        b2t: function(size) {\n\t            return this.ver(size, false);\n\t\n\t        },\n\t\n\t        move: function(direction, distance) {\n\t\n\t            direction === 'l2r' || direction === 'r2l' ? $el.transform('translate', distance) : $el.transform('translate', 0, distance);\n\t\n\t        }\n\t    }\n\t\n\t}\n\t\n\t\n\t\n\tns.widget('aside', {\n\t    /**\n\t     * 设置组件初始化参数\n\t     * @type {Object}\n\t     * @memberOf smui.aside\n\t     * @instance\n\t     * @property {String}  direction  侧边栏弹出的方向：l2r：从左向右,r2l：从右向左,t2b：从上向下,b2t：从下向上;\n\t     * @property {Number}  speed      侧边栏弹出的速度，单位ms\n\t     * @property {String}  size       侧边栏的大小，具体是width或height与侧边栏弹出方向有关，水平方向，则代表width。\n\t     * @property {Object | Boolean}   modal 是否出现遮着层,若为fasle 则没有遮罩层，若为{} 则有，具体参数参见{ @link layermask}。\n\t     * @property {Object | Boolean}   position 定位侧边样，top，bottom 只在侧边栏从水平方向出现时有效;left , right 只在侧边栏从垂直方向出现时有效\n\t     * @property {Dom | Zepto | selector} contentWrap 主体内容dom，若不传，则默认为aside的next节点\n\t     * @property {String} display     可选值：('overlay' | 'push') aside出现模式，overlay表示浮层，push表示aside将content推出\n\t     */\n\t    options: {\n\t\n\t        direction: 'r2l',\n\t\n\t        speed: 500,\n\t\n\t        size: '50%',\n\t\n\t        display: 'overlay',\n\t\n\t        contentWrap: '',\n\t\n\t        modal: {\n\t            supportFadeInOut: false,\n\t\n\t            css: {\n\t                'opacity': 0.5\n\t            }\n\t        },\n\t        position: {\n\t\n\t            'position': 'fixed',\n\t\n\t            'top': '0px',\n\t\n\t            'bottom': '0px',\n\t\n\t            'left': '0px',\n\t\n\t            'right': '0px'\n\t        }\n\t    },\n\t    /**\n\t     * 初始化组件\n\t     * @private\n\t     */\n\t    _init: function() {\n\t        var $el, opts, eventNS, me;\n\t\n\t        me = this;\n\t\n\t        $el = this.$el\n\t\n\t        opts = this.options;\n\t\n\t        this.display = opts.display;\n\t\n\t        this.state = 0;\n\t\n\t        eventNS = this.eventNS;\n\t\n\t        this._initElement();\n\t\n\t        setTimeout(function() {\n\t            $el.transition({\n\t                speed: opts.speed,\n\t\n\t                delay: 0,\n\t\n\t                property: 'transform'\n\t            });\n\t        }, opts.speed);\n\t\n\t\n\t        $el.transform();\n\t\n\t        if (opts.modal) {\n\t\n\t            $el.layerMask($.isPlainObject(opts.modal) ? opts.modal : {});\n\t\n\t            $el.off(eventNS).on('maskClick' + eventNS, function(e) {\n\t                me.hide();\n\t            });\n\t        }\n\t\n\t        this.$contentWrap = $(opts.contentWrap || $el.next());\n\t\n\t    },\n\t    /**\n\t     * 初始化组件的DOM\n\t     * @private\n\t     */\n\t    _initElement: function() {\n\t\n\t        var $el, css, opts, direction;\n\t\n\t        $el = this.$el;\n\t\n\t        opts = this.options;\n\t\n\t        direction = opts.direction;\n\t\n\t        $el.css('position', opts.position.position);\n\t\n\t        this.offsetObj = this.offsetObj || offsetObj($el, opts.position);\n\t\n\t        //如果DOM元表没有显示的话，是没有办法计算盒计模型的，导至过渡属性不能正常使用\n\t        $el.show();\n\t\n\t        this.distance = this.offsetObj[direction](opts.size);\n\t\n\t\n\t    },\n\t    /**\n\t     * 移动DOM\n\t     * @private\n\t     */\n\t    _translate: function(distance, offset) {\n\t\n\t        offset = offset || this.offsetObj;\n\t\n\t        offset.move(this.options.direction, distance);\n\t\n\t    },\n\t    /**\n\t     * 显示侧边栏，触发open事件\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.aside\n\t     * @fires open\n\t     */\n\t    show: function(display) {\n\t\n\t        var me = this;\n\t\n\t        this.state = !this.state;\n\t\n\t        display = display || this.options.display;\n\t\n\t        setTimeout(function() {\n\t\n\t            me._translate(0);\n\t\n\t\n\t        }, 16);\n\t\n\t        if (me.options.modal) {\n\t\n\t            me.$el.layerMask('show');\n\t\n\t        } else {\n\t\n\t            me.$el.show();\n\t\n\t        }\n\t\n\t        this._displayContentWrap(display, -this.distance);\n\t\n\t\n\t\n\t        /**\n\t         * 侧边栏打开时触发\n\t         * @instance\n\t         * @memberOf smui.aside\n\t         * @event open\n\t         */\n\t\n\t\n\t\n\t        this.trigger('open', this.distance);\n\t\n\t    },\n\t\n\t    _displayContentWrap: function(display, distance) {\n\t        var me = this,\n\t            opts = this.options;\n\t\n\t        this.display = display || this.display;\n\t\n\t        if (this.display === 'push') {\n\t\n\t            if (!this._contentWrapOffsetObj) {\n\t                this.$contentWrap.transition({\n\t                    speed: opts.speed,\n\t\n\t                    delay: 0,\n\t\n\t                    property: 'transform'\n\t                });\n\t                this.$contentWrap.transform();\n\t\n\t                this._contentWrapOffsetObj = offsetObj(this.$contentWrap);\n\t            }\n\t\n\t            this._translate(distance, this._contentWrapOffsetObj);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * 隐藏侧边栏，触发close事件\n\t     * @public\n\t     * @instance\n\t     * @memberOf smui.aside\n\t     * @fires open\n\t     */\n\t    hide: function(display) {\n\t\n\t        var $el = this.$el,\n\t            me = this;\n\t\n\t\n\t        this.state = !this.state;\n\t\n\t        this._translate(this.distance);\n\t\n\t        setTimeout(function() {\n\t            if (me.options.modal) {\n\t                $el.layerMask('hide');\n\t            } else {\n\t                $el.hide();\n\t            }\n\t\n\t\n\t        }, this.options.speed);\n\t\n\t        this._displayContentWrap(display, 0);\n\t\n\t        /**\n\t         * 侧边栏隐藏时触发\n\t         * @instance\n\t         * @memberOf smui.aside\n\t         * @event close\n\t         */\n\t        this.trigger('close', this.distance);\n\t\n\t    },\n\t    /**\n\t     * 释放内存\n\t     * @alias destroy\n\t     * @instance\n\t     * @memberOf smui.aside\n\t     */\n\t    _destroy: function() {\n\t\n\t        var $el = this.$el;\n\t\n\t        this.mask.off(this.eventNS);\n\t\n\t        $el.layerMask('destroy');\n\t\n\t        $el.translate('destroy');\n\t\n\t        $el.transform('destroy');\n\t\n\t    },\n\t    /**\n\t     * 显示或隐藏侧边栏\n\t     * @instance\n\t     * @memberOf smui.aside\n\t     */\n\t    toggle: function(display) {\n\t\n\t\n\t        this.state ? this.hide(display) : this.show(display);\n\t    }\n\t\n\t});\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** smui.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9ac62a88ca4bbff0c026\n **/","var ns = require('./smui.js');\nrequire('./smui.transition.js');\nrequire('./smui.transform.js');\nrequire('./smui.history.js');\nrequire('./smui.imagelazy.js');\nrequire('./smui.fadeInOut.js');\nrequire('./smui.layermask.js');\nrequire('./smui.slider.js');\nrequire('./smui.dialog.js');\nrequire('./smui.carousel.js');\nrequire('./smui.dialog.js');\nrequire('./smui.tab.js');\nrequire('./smui.aside.js');\n\nmodule.exports = ns;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ui.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * smui.js v0.0.1\n * (c) 2015 Mingli Guo\n * Released under the MIT License.\n * @namespace smui\n * @type {Object}\n * @property {Object}  Event      给widget提供事件行为。也可以给其他对象提供事件行为\n * @property {Object}  Tools      smui工具对象\n * @property {Object}  Base       widget基类。不能直接使用\n */\nvar ns = {},\n    /*\n     **缓存组件。\n     */\n    cache = (function() {\n        var data = {};\n\n        return {\n            add: function(obj, name, val) {\n                var rkey = obj.data(this.generateKey(name));\n                data[rkey] = val;\n            },\n            get: function(obj, name) {\n                var rkey = obj.data(this.generateKey(name));\n                return data[rkey];\n            },\n            remove: function(obj, name) {\n                var rkey = obj.data(this.generateKey(name));\n                delete data[rkey];\n            },\n            generateKey: function(name) {\n                return name + 'Key';\n            }\n        }\n    })(),\n\n    format,\n    newId;\n\n\n\n/**\n * 给widget提供事件行为。也可以给其他对象提供事件行为\n * @module smui.Event\n * @alias smui.Event\n * @type {Object}\n */\nns.Event = {\n    /**\n     * 绑定事件。\n     * @method on\n     * @static\n     * @param  {String}   name     事件名\n     * @param  {Function} callback 事件处理器\n     * @param  {Object}   context  事件处理器的上下文。\n     * @return {self} 返回自身，方便链式\n     */\n    on: function(name, callback, context) {\n        var events;\n        if (!callback || typeof callback !== 'function') {\n            return this;\n        }\n        this._events = this._events || {};\n        events = name in this._events ? this._events[name] : this._events[name] = [];\n        if (name in this._events) {\n            events = this._events[name];\n        } else {\n            this._events[name] = [];\n            events = this._events[name];\n        }\n        events.push({\n            \"fn\": callback,\n            \"context\": context || this\n        });\n        return this;\n    },\n    /**\n     * 解除事件绑定\n     * @method off\n     * @static\n     *\n     * @param  {String}   name     事件名\n     * @param  {Function} callback 事件处理器\n     * @param  {Object}   context  事件处理器的上下文。\n     * @return {self} 返回自身，方便链式\n     * @chainable\n     */\n    off: function(name, callback, context) {\n        var events;\n        if (!name || !(name in this._events)) {\n            return this;\n        }\n\n        if (!callback || typeof callback !== 'function') {\n            return this;\n        }\n\n        if (events = this._events[name]) {\n            if (context = context || this) {\n                this._events[name] = events.filter(function(v) {\n                    return v.callback !== callback || context !== v.context;\n                });\n            }\n        }\n\n        return this;\n    },\n    _trigger: function(name) {\n        var args, events, i = -1,\n            l, ev;\n        if ($.isEmptyObject(this._events)) {\n            return this;\n        }\n        args = [].slice.call(arguments, 1);\n        events = this._events[name];\n        if (events) {\n            l = events.length;\n            while (++i < l) {\n                (ev = events[i]).fn.apply(ev.context, args);\n            }\n        }\n        return this;\n    },\n    /**\n     * 触发事件\n     * @method trigger\n     * @static\n     * @param  {String}   name     事件名\n     * @param  {*} * 任意参数\n     * @return {self} 返回自身，方便链式\n     * @chainable\n     */\n    trigger: function() {\n        return this._trigger.apply(this, [].slice.call(arguments, 0));\n    }\n}\n\n/**\n * smui工具对象\n * @module smui.Tools\n * @alias smui.Tools\n * @type {Object}\n */\nns.Tools = {\n    /**\n     * 用于生成唯一ID\n     * @method newId\n     * @static\n     * @return {String} 36位的ID 格式：XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n     */\n    newId: function() {\n        function S4() {\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n        }\n        return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase();\n\n    },\n    /**\n     * 格式化字符串\n     * @method format\n     * @static\n     * @param {String} str 格式化字符串\n     * @param {String}  *  任意字符\n     * @return {String} 格式化后的字符串\n     * @example\n     * smui.Tools.format('My name is {0}','Li Lei')\n     */\n    format: function() {\n        if (arguments.length == 0) return this;\n        var args = [].slice.call(arguments, 1),\n            str = arguments[0];\n        for (var i = 0; i < args.length; i++) {\n            var re = new RegExp('\\\\{' + i + '\\\\}', 'gm');\n            str = str.replace(re, args[i]);\n        }\n        return str;\n    }\n\n};\n\n\n/**\n * 根据组件名获取组件实例\n * @throws 若smui不存在指定的组件，则会抛出异常\n * @memberOf smui\n * @method getWidgetInstance\n * @param  {String} name 组件名\n * @param  {String} selector DOM选择器\n * @param  {Object} options  组件参数\n * @return {Object} 组织的实现对像\n * @example\n * var tab = smui.getWidgetInstance('tab','.smui-tab');\n */\nns.getWidgetInstance = function(name, selector, options) {\n        if (this.isExistWidget(name)) {\n            return new ns[name]($(selector), options || {});\n        } else {\n            throw new Error('There is no ' + name + 'Widget');\n        }\n    },\n\n    /**\n     * 判定某个组件是否存在\n     * @memberOf smui\n     * @method isExistWidget\n     * @param  {String}  name 组件名\n     * @return {Boolean}      smui存在组件则返回true\n     */\n    ns.isExistWidget = function(name) {\n        return name in ns;\n    },\n    /**\n     * 判定DOM上是否有指定的组件\n     * @memberOf smui\n     * @method isExistWidgetInDom\n     * @param  {String}  name 组件名\n     * @param  {Object}  ele  DOM对像\n     * @return {Boolean}      DOM存在组件则返回true\n     */\n    ns.isExistWidgetInDom = function(name, ele) {\n        var key = cache.generateKey(name);\n\n        return !!cache.get($(ele), key);\n    }\n\n\nformat = ns.Tools.format;\nnewId = ns.Tools.newId;\n\n\n/**\n *\n * 创建组件\n * @inner\n * @param name String 组件的名字\n * @param proto Object 组件的上的方法和属性\n */\nfunction _createWidget(name, proto) {\n    if (!$.isPlainObject(proto)) {\n        throw new Error('proto不是通过 \"{}\" 或者 \"new Object\" 创建的');\n    }\n\n    function _class(el, options) {\n        var $el = $(el),\n            key = cache.generateKey(name);\n\n        if ($el.length == 0) {\n            throw new Error(format('The {0} element does not exist', $el.selector));\n        }\n\n        this.$el = $el;\n\n        this.version = '0.0.1';\n\n        this.$el.data(key, $el.data(key) || newId());\n\n        cache.add($el, name, this);\n\n        this.name = name;\n\n        this.options = {};\n\n        //组件被覆写的方法\n        this.overrides = {};\n\n        //组件命名空间\n        this.eventNS = format('.{0}.widget.smui', name);\n\n        this.__init(proto, options);\n\n        this.pluginPlaceholder();\n\n        this._trigger('widgetReady');\n    }\n\n    $.extend(_class.prototype, ns.Base, {\n        __init: function(proto, options) {\n            var attr, fnList = _class.plugin,\n                _options = {},\n                fn;\n            //合并组件本身的options\n            $.extend(true, this.options, proto.options || {}, options || {});\n            _class.attachPrototype.call(this, proto);\n            //合并当前组件的插件的options并初始化插件\n            for (var _name in fnList) {\n                fn = fnList[_name];\n                if (fn) {\n                    $.extend(true, this.options, fn.options || {}, options || {});\n                    $.isFunction(fn._init) && fn._init.call(this);\n                    _class.attachPrototype.call(this, fn, fn.name);\n                }\n\n            }\n            //初始华组件\n            proto && $.isFunction(proto._init) && proto._init.call(this);\n\n\n        },\n        /*插件始化*/\n        pluginPlaceholder: function() {\n            var args = [].slice.call(arguments, 0);\n            this.trigger('initPlugin', args);\n        },\n        /*获取组件中的插件*/\n        getPlugin: function(name) {\n            return typeof name == 'undefined' ? _class.plugin : _class.plugin[name];\n        },\n        /*获取组件中被覆写的方法*/\n        getOverrideFn: function(name) {\n            return typeof name === 'string' ? this.overrides[name] : null;\n        },\n        vendors: function(prop) {\n\n            var styles, vendors, results;\n\n            styles = window.getComputedStyle(this.$el.get(0), null);\n\n            vendors = ['-webkit-', ''];\n\n            results = [];\n\n            for (var i = 0, len = vendors.length, _prop; i < len; i++) {\n                _prop = vendors[i] + prop;\n                if (_prop in styles) {\n                    results.push(_prop);\n                }\n            }\n\n            return results;\n        }\n\n    });\n\n\n    _class.plugin = {};\n    /*\n     ** 为组件附件方法\n     */\n    _class.attachPrototype = function(proto) {\n        var attr, prototype = _class.prototype,\n            overrides = this.overrides,\n            _proto;\n        for (attr in proto) {\n            if (attr != 'options' && attr != '_init') {\n                _proto = proto[attr];\n                if (attr in prototype && !(attr in overrides)) {\n                    overrides[attr] = $.isFunction(_proto) ? $.proxy(_proto, this) : _proto;\n                }\n                prototype[attr] = _proto;\n            }\n        }\n    };\n    /*\n     ** 为组件添加插件\n     */\n    _class.createPlugin = function(name, proto) {\n        var plugins = _class.plugin,\n            attr;\n        if (name && !(name in plugins)) {\n            plugins[name] = proto;\n        } else {\n            throw new Error(format('插件{0}已经存在或者插件的名字不能为空', name));\n        }\n    };\n\n    return _class;\n\n}\n\n\nns = $.extend(ns, {\n    /**\n     * 定义组件\n     * @memberOf smui\n     * @method widget\n     * @param  {String}  name 组件名\n     * @param  {Object}  proto 组件的Method\n     *\n     */\n    widget: function(name, proto) {\n        if (!name) return;\n        ns[name] = this.createWidget(name, proto);\n        bridge(name, ns);\n    },\n    createWidget: _createWidget\n});\n/*\n * widget基类。不能直接使用\n * @module smui.Base\n * @alias smui.Base\n * @type {Object}\n */\nns.Base = $.extend({}, ns.Event, {\n    trigger: function(name) {\n        var args = [].slice.call(arguments, 0),\n            _args = [];\n        if (this._events && name in this._events) {\n\n            _args.push(name);\n\n            this._trigger.apply(this, _args.concat(args[1]));\n        }\n        if (this.$el) {\n            this.$el.trigger.apply(this.$el, args);\n        }\n    },\n    destroy: function() {\n        this._destroy && typeof this._destroy === 'function' && this._destroy();\n        cache.remove(this.$el);\n        this.$el.off(this.eventNS);\n        this._events = [];\n    },\n    setOption: function() {\n        var args = [].slice.call(arguments, 0),\n            arg;\n        if (args.length == 0) {\n            return;\n        }\n        arg = arg[0];\n        if ($.isPlainObject(arg)) {\n            $.extend(this.options, arg);\n        } else if (typeof arg === 'string') {\n            if (args.length >= 2) {\n                this.options[arg] = args[1];\n            }\n        } else {\n            return;\n        }\n    }\n});\n\n/*\n **挂载组件到$.fn\n */\nfunction bridge(name, ns) {\n    var key = name.toLowerCase(),\n        old = $.fn[name];\n\n    $.fn[name] = function(opts) {\n        var args = [].slice.call(arguments, 1),\n            method = typeof opts === 'string' && opts || typeof opts === 'undefined' && 'this',\n            obj,\n            ret,\n            _this;\n\n\n        if (this.length > 0) {\n            _this = this.eq(0)\n        } else {\n            return this;\n        }\n\n        obj = cache.get(_this, name) || new ns[name](_this, $.isPlainObject(opts) ? opts : undefined);\n        if (method === 'this') {\n            ret = obj;\n\n        } else if (method) {\n            if (method in obj) {\n                if (typeof obj[method] !== 'function') {\n                    ret = obj[method];\n                } else {\n                    ret = obj[method].apply(obj, args);\n                }\n\n            } else {\n                throw new Error(name + '组件没有此方法或属性：' + method);\n            }\n            if (ret !== undefined && ret !== obj) {\n                return ret;\n            }\n            ret = undefined;\n        } else {\n\n        }\n        return ret !== undefined ? ret : _this;\n\n    };\n    //解决冲突\n    $.fn[name].noConflict = function() {\n        $.fn[name] = old;\n        return this;\n    }\n}\n    \n\nmodule.exports = ns;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * @author @author Guo Mingli(mingli.guo@shenma-inc.com)\n * @date 2015-1-20\n * @version 0.0.1\n * @file DOM元素的过渡属性\n * @class  smui.transition\n * @see  {@link http://www.w3cplus.com/content/css3-transition}\n * @import  zepto.js smui.js\n */\n\n\n\nvar ns = require('./smui.js');\n    ns.widget('transition', {\n        /**\n         * 设置组件初始化参数\n         * @type {Object}\n         * @memberOf smui.transform\n         * @instance\n         * @property {speed }  speed     参考CSS3 transition-duration\n         * @property {String}  property  参考CSS3 transition-property， 无素添加前缀\n         \n         * @property {String}  easing    参考CSS3 transition-timing-function\n         \n         * @property {Number}  delay     参考CSS3 transition-delay\n         \n         */\n        options: {\n            speed: 2000, //Number  过渡的时间（速度）\n\n            property: '', //String  要过渡的属性        \n\n            easing: 'ease', //String  缓动函数\n\n            delay: 100 //Number  淡隐淡出的延迟时间\n        },\n\n        /*\n         ** @description 初始化组件\n         */\n        _init: function() {\n            var $el = this.$el,\n\n                opts = this.options;\n\n            $el.css(this.setValue(opts.property, opts.speed, opts.easing, opts.delay));\n\n        },\n        setValue: function(prop, speed, easing, delay) {\n            !$.isUndefined(prop) && this.setProperty(prop);\n            !$.isUndefined(speed) && this.setDuration(speed);\n            !$.isUndefined(easing) && this.setEasing(easing);\n            !$.isUndefined(delay) && this.setDelay(delay);\n        },\n        /**\n         * 设置transition-property\n         * @param {String} prop css属性，参考transition-property\n         * @instance\n         * @memberOf smui.transition\n         */\n        setProperty: function(prop) {\n            var transitionProperty, valProperty;\n\n            transitionProperty = this.vendors('transition-property');\n\n            valProperty = this.vendors(prop);\n\n\n            this._setValue(transitionProperty, valProperty);\n\n\n        },\n        /**\n         * 设置transition-duration\n         * @param {Number} duration css属性，参考transition-duration\n         * @instance\n         * @memberOf smui.transition\n         */\n        setDuration: function(duration) {\n            var property;\n\n            property = this.vendors('transition-duration');\n\n            this._setValue(property, duration / 1000 + 's');\n        },\n        /**\n         * 设置transition-timing-function\n         * @param {String} easing css属性，参考transition-timing-function\n         * @instance\n         * @memberOf smui.transition\n         */\n        setEasing: function(easing) {\n            var property;\n\n            property = this.vendors('transition-timing-function');\n\n            this._setValue(property, easing || 'ease');\n        },\n        /**\n         * 设置transition-delay\n         * @param {String} delay css属性，参考transition-delay {@link }\n         * @instance\n         * @memberOf smui.transition\n         */\n        setDelay: function(delay) {\n            var property;\n\n            property = this.vendors('transition-delay');\n\n            this._setValue(property, delay / 1000 + 's');\n        },\n        _setValue: function(property, val) {\n            var result, isArray, i, len, $el;\n\n            i = 0;\n\n            len = property.length;\n\n            result = {};\n\n            $el = this.$el;\n\n            isArray = $.isArray(val);\n\n\n            for (; i < len; i++) {\n                result[property[i]] = isArray ? val[i] : val;\n            }\n\n            $el.css(result);\n\n        }\n\n\n\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.transition.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * @file DOM元素的变形CSS\n * @author Guo Mingli(mingli.guo@shenma-inc.com)\n * @date 2015-1-20\n * @version 0.0.1\n * @class smui.transform \n * @see  {@link http://www.w3cplus.com/css3/css3-3d-transform.html}\n\n * @import  zepto.js smui.js \n */ \n\nvar ns = require('./smui.js');\n\n ns.widget('transform', {      \n        /**\n         * 设置组件初始化参数\n         * @type {Object}\n         * @memberOf smui.transform\n         * @instance\n         * @property {Boolean}  is3d   是否是3D版的属性，默认true        \n         */\n        options:{\n            is3d : true\n        },     \n\n        /*\n        ** @description 初始化组件        \n        */        \n        _init : function() {\n           \n            this.support3D = this.options.is3d;   \n\n            this.prop = this.vendors('transform');                    \n        },\n\n        _setValue: function(str){\n\n            var result, i, len, $el, property;\n\n            i        = 0;\n\n            property = this.prop;\n\n            len      = property.length;\n            \n            result   = {};\n            \n            $el      = this.$el;          \n\n\n            for (; i < len; i++) {\n\n                result[property[i]] = str;\n\n            }\n\n            $el.css(result);\n        },\n        /**\n         * 平移\n         * @param  {Number} x  用来指定元素X轴方向平移距离\n         * @param  {Number} y  用来指定元素Y轴方向平移距离\n         * @param  {Number} z  用来指定元素Z轴方向平移距离\n         * @instance\n         * @memberOf smui.transform\n         */\n        translate: function(x,y,z) {      \n\n            this._build('translate',x,y,z,'px',0);\n           \n        },\n        /**\n         * 缩放\n         * @param  {Number} x  横向缩放比例\n         * @param  {Number} y  纵向缩放比例\n         * @param  {Number} z  Z轴缩放比例\n         * @instance\n         * @memberOf smui.transform\n         */\n        scale: function(x,y,z) {\n          \n\n            this._build('scale',x,y,z,'',1);\n        },\n         /**\n         * 倾斜是二维变形，不能在三维空间变形。元素可能会在X轴和Y轴倾斜，然后转化为三维，但它们不能在Z轴倾斜。\n         * @param  {Number} x  用来指定元素X轴方向倾斜的角度。\n         * @param  {Number} y  用来指定元素Y轴方向倾斜的角度。         \n         * @instance\n         * @memberOf smui.transform\n         */\n        skew:function(x,y){\n            this._build('skew',x,y,undefined,'deg',0,false);\n        },\n        /**\n         * 旋转,旋转的量被定义为指定的角度；如果值为正值，元素围绕Y轴顺时针旋转；反之，如果值为负值，元素围绕Y轴逆时针旋转\n         * @param  {Number} x  元素围绕X轴旋转\n         * @param  {Number} y  元素围绕Y轴旋转\n         * @param  {Number} z  元素围绕Z轴旋转     \n         * @instance\n         * @memberOf smui.transform \n         */\n        rotate: function(x,y,z){\n      \n\n            this._build('rotate',x,y,z,'deg',0);\n        },\n\n        _build:function(prop,x,y,z,unit,init,is3D){\n             var str,format;\n\n             is3D = $.isUndefined(is3D) ? this.support3D :is3D;\n\n            if (is3D) {\n\n                format = prop + '3d({0},{1},{2})';\n            } else {\n\n                format = prop + '({0},{1})';\n            }\n            \n           \n            if (typeof x === 'undefined') {\n                x = init;\n            }\n            if (typeof y === 'undefined') {\n                y = init;\n            }\n            if (typeof z === 'undefined') {\n                z = init;\n            }\n\n            str = ns.Tools.format(format, x+unit, y+unit, z+unit);\n\n            this._setValue(str);\n        }\n\n\n\n    });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.transform.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\r\n * @file 用于实现组件与浏览器前进后退相关联,主要利用hashChange来实现\r\n * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n * @date 2015-01-20\r\n * @class smui.history\r\n * @version 0.0.1\r\n * @import smui.js\r\n */\r\n\r\n\r\nvar ns = smui = require('./smui.js');\r\nns.widget('history', {\r\n\r\n    options: {\r\n        renderTo: 'li'\r\n    },\r\n\r\n    _init: function() {\r\n\r\n        var $els, me, eventNS;\r\n\r\n        me = this;\r\n\r\n        eventNS = this.eventNS;\r\n\r\n        $els = this.$els = this.$el.find(this.options.renderTo);\r\n\r\n        this.eleHasHash();\r\n\r\n        $(window).on('hashchange', function(e) {\r\n\r\n            me.hashChange();\r\n\r\n        }).on('hash', function(e, h) {\r\n\r\n            if (h) {\r\n\r\n                $els.each(function(i, v) {\r\n\r\n                    var _hash = me.getHash($(this));\r\n\r\n                    if (_hash.indexOf('#') != 0) {\r\n\r\n                        _hash = '#' + _hash;\r\n\r\n                    }\r\n\r\n                    if (_hash == h) {\r\n\r\n                        $(this).trigger(\"history\", [i, h]);\r\n                    }\r\n\r\n                });\r\n            } else {\r\n\r\n                $els.eq(0).trigger(\"history\", [0, me.getHash($els.eq(0))]);\r\n\r\n            }\r\n            me.hash = h;\r\n\r\n        })\r\n\r\n        $els.off(eventNS).on('click' + eventNS, function(e) {\r\n            location.hash = me.getHash($(this));\r\n        });\r\n\r\n\r\n        this.hashChange();\r\n\r\n    },\r\n    /*\r\n     ** @description 检测是用户是否有data-hash,没有则用newId生成唯一hash\r\n     */\r\n    eleHasHash: function() {\r\n        var $els, me;\r\n\r\n        $els = this.$els;\r\n\r\n        me = this;\r\n\r\n        $els.each(function(i, v) {\r\n            var hash, $v;\r\n\r\n            $v = $(v);\r\n\r\n            hash = me.getHash($v);\r\n\r\n            if (!hash) {\r\n\r\n                $v.data('hash', ns.Tools.newId());\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    hashChange: function() {\r\n        var h = location.hash;\r\n\r\n        if (this.hash != h) {\r\n\r\n            //解决hashChange解发，但有些处理逻辑没有加载的问题，                \r\n            setTimeout(function() {\r\n                $(window).trigger('hash', h);\r\n            }, 16);\r\n\r\n        }\r\n    },\r\n\r\n    getHash: function($el) {\r\n        var _h = $el.data('hash') || $el.data('href');\r\n\r\n        return $.type(_h) === 'number' ? _h + '' : _h;\r\n    },\r\n    _destroy: function() {\r\n        $(window).off('hashchange').off('hash');\r\n    }\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.history.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\r\n * @file 图片的懒加载\r\n * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n * @date 2015-01-20\r\n * @class smui.lazyImage \r\n * @version 0.0.1\r\n *\r\n * @example\r\n*       <div class=\"smui-lazy-img\"  >\r\n            <img data-lazy-img data-src=\"http://s2.zimgs.cn/ims?kt=url&amp;at=ori&amp;tv=0_0&amp;sign=yx:H04ZQvxARNg7plzPP0uv6kEXsgo=&amp;key=aHR0cDovL2E0LmF0dC5odWRvbmcuY29tLzA3Lzg4LzAxMzAwNTQyNTcwMzkwMTQwNzc1ODgwMDY4NTEzX3MuanBn&amp;x.jpg\">\r\n            <span class=\"loading\" data-img-loading> <i>正在加载</i>\r\n            </span>\r\n        </div>\r\n\r\n        $('body').lazyImage();\r\n\r\n */\r\n\r\n\r\nvar ns = require('./smui.js');\r\n\r\nrequire('./smui.fadeInOut');\r\n\r\nns.widget('lazyImage', {\r\n    /**\r\n     * 设置组件初始化参数\r\n     * @type {Object}\r\n     * @memberOf smui.lazyImage\r\n     * @instance\r\n     * @property {Object}  effect     图片懒加载时的效果，目前暂时只有fade一种。\r\n     * @property {Object}  loading    图片loading的淡隐淡出参数\r\n     * @property {Boolean}   isScrollLoad 页面滚动时是否懒加载图片\r\n     */\r\n    options: {\r\n        effect: {\r\n            name: 'fade',\r\n\r\n            param: {\r\n\r\n                speed: 500, //Number  淡隐淡出的时间（速度）\r\n\r\n                opacity: [0, 1], //Array   淡隐淡出的透明度     \r\n\r\n                easing: 'ease', //String  缓动函数\r\n\r\n                delay: 100 //Number  淡隐淡出的延迟时间\r\n            }\r\n\r\n        },\r\n\r\n        loading: {\r\n            speed: 100, //Number  淡隐淡出的时间（速度）\r\n\r\n            opacity: [1, 0], //Array   淡隐淡出的透明度     \r\n\r\n            easing: 'ease', //String  缓动函数\r\n\r\n            delay: 0 //Number  淡隐淡出的延迟时间\r\n\r\n        },\r\n\r\n        isScrollLoad: false\r\n    },\r\n    /*\r\n     ** @description 初始化组件\r\n     */\r\n    _init: function() {\r\n\r\n        var me, $el, opts;\r\n\r\n        me = this;\r\n\r\n        $el = this.$el;\r\n\r\n        opts = this.options;\r\n\r\n        opts.isScrollLoad && $(window).off(eventNS).on('scroll' + eventNS, function(e) {\r\n            me.lazy();\r\n        });\r\n\r\n        me.lazy();\r\n    },\r\n\r\n    lazy: function($images) {\r\n\r\n        var me, $imgs, opts, src;\r\n\r\n        me = this;\r\n\r\n        opts = this.options;\r\n\r\n        $imgs = ($images && $images.length > 0) ? $images : this.$el.find('[data-lazy-img]');\r\n\r\n        $imgs.each(function(i, v) {\r\n            var $this, img, src;\r\n\r\n            $this = $(v);\r\n\r\n            $this.hide();\r\n\r\n            img = new Image();\r\n\r\n            img.onerror = function() {\r\n\r\n                me.trigger('img-error', [v, src]);\r\n\r\n                $this.hide();\r\n            };\r\n\r\n            img.onload = function() {\r\n\r\n                $this.attr('src', src);\r\n\r\n                me[opts.effect.name]($this);\r\n\r\n                me.trigger('img-load', [v, src]);\r\n            };\r\n\r\n            src = $this.data('src');\r\n\r\n            if (src === '') {\r\n\r\n                $this.hide();\r\n\r\n            } else {\r\n\r\n                img.src = src;\r\n\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n    },\r\n    fade: function($obj) {\r\n\r\n        var opts, $loading;\r\n\r\n        if (ns.isExistWidgetInDom('fadeInOut', $obj)) {\r\n            return;\r\n        }\r\n\r\n        opts = this.options;\r\n\r\n        $obj.fadeInOut(opts.effect.param);\r\n\r\n        $obj.fadeInOut('show');\r\n\r\n        $loading = $obj.parent().find('[data-img-loading]');\r\n\r\n        $loading.fadeInOut(opts.loading);\r\n\r\n        $loading.fadeInOut('show');\r\n\r\n    },\r\n\r\n    _destroy: function() {\r\n\r\n        $(window).off(eventNS);\r\n\r\n    }\r\n\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.imagelazy.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * @file 淡隐淡出效果\n * @author Guo Mingli(mingli.guo@shenma-inc.com)\n * @date 2015-01-20\n * @class smui.fadeInOut\n * @version 0.0.1\n * @import  zepto.js smui.js smui.transition.js\n */\n\nvar ns = require('./smui.js');\n\nrequire('./smui.transition.js');\n\nns.widget('fadeInOut', {\n    /**\n     * 设置组件初始化参数\n     * @type {Object}\n     * @memberOf smui.fadeInOut\n     * @instance\n     * @property {String}  easing     缓动函数\n     * @property {Number}  speed      淡隐淡出的时间（速度）\n     * @property {Array}   opacity     淡隐淡出的透明度  [start,end]\n     * @property {Number}  delay     淡隐淡出的延迟时间\n     */\n    options: {\n        speed: 2000, //Number  淡隐淡出的时间（速度）\n\n        opacity: [0, 1], //Array   淡隐淡出的透明度     \n\n        easing: 'ease', //String  缓动函数\n\n        delay: 100 //Number  淡隐淡出的延迟时间\n\n\n    },\n    /*\n     ** @description 初始化组件\n     */\n    _init: function() {\n        var $el = this.$el,\n\n            me = this,\n\n            css = {};\n\n        opts = this.options;\n\n        $el.transition({\n\n            speed: opts.speed, //Number  过渡的时间（速度）\n\n            property: 'opacity', //String  要过渡的属性        \n\n            easing: opts.easing, //String  缓动函数\n\n            delay: opts.delay //Number  淡隐淡出的延迟时间\n\n        });\n\n        // css            = ns.tools.transition('opacity', opts.speed, opts.easing, opts.delay);\n\n        css['opacity'] = opts.opacity[0];\n\n        $el.css(css);\n\n        $el.off(this.eventNS).on('webkitTransitionEnd' + this.eventNS, function(e) {\n\n            var flag = $el.css('opacity') == opts.opacity[0];\n\n\n            /**\n             * 效果完成后触发\n             * @instance\n             * @memberOf smui.fadeInOut\n             * @event fadeCompleted\n             */\n            me.trigger('fadeCompleted', flag);\n\n        });\n    },\n    /**\n     * 淡入或淡出，由options.opacity确定\n     * @public\n     * @instance\n     * @memberOf smui.fadeInOut\n     * @fires fadeCompleted\n     */\n    show: function() {\n\n        var opts = this.options,\n\n            me = this;\n\n        //此处使用setTimeout用于解决不能淡入的效果，\n        //使用css3 transition改变透明度和display配合，会忽然transition的动画效果，所以此处使用定时器达到一个延迟动画的作用。            \n        setTimeout(function() {\n\n            me.$el.css({\n                'opacity': opts.opacity[1]\n\n            })\n\n        }, 16);\n\n        this.state = true;\n\n        this.$el.show();\n    },\n    /**\n     * 淡入或淡出，由options.opacity确定\n     * @public\n     * @instance\n     * @memberOf smui.fadeInOut\n     * @fires fadeCompleted\n     */\n    hide: function() {\n        var opts = this.options,\n\n            me = this;\n\n        me.$el.css({\n\n            'opacity': opts.opacity[0]\n\n        });\n\n        this.state = false;\n    },\n    /**\n     * 淡入或淡出，由options.opacity确定\n     * @public\n     * @instance\n     * @memberOf smui.fadeInOut\n     * @fires fadeCompleted\n     */\n    toggle: function() {\n\n        this.state ? this.hide() : this.show();\n    },\n    /**\n     * 释放内存\n     * @alias destroy\n     * @instance\n     * @memberOf smui.fadeInOut\n     */\n    _destroy: function() {\n\n        var $el = this.$el;\n\n        $el.transition('destroy');\n\n    }\n\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.fadeInOut.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * @file 遮罩效果\n * @author Guo Mingli(mingli.guo@shenma-inc.com)\n * @date 2015-1-20\n * @version 0.0.1\n * @class  smui.layerMask\n * @import smui.js smui.fadeInOut.js\n */\n\n\n\nvar ns = require('./smui.js');\n\nns.widget('layerMask', {\n    /**\n     * 设置组件初始化参数\n     * @type {Object}\n     * @memberOf smui.layerMask\n     * @instance\n     * @property {Object}   css              设置遮罩层的参数\n     * @property {Boolean}  supportFadeInOut 遮罩层是否支技淡隐淡出（依赖smui.fadeInOut.js）\n     * @property {Object}   fadeInOut        设置淡隐淡出的参数\n     */\n    options: {\n\n        supportFadeInOut: true, // Boolean 遮罩层是否支技淡隐淡出（依赖smui.fadeInOut.js）\n\n        fadeInOut: {\n\n            speed: 2000, // Number  遮罩层淡隐淡出的速度\n\n            easing: 'ease', // String  遮罩层淡隐淡出的缓动函数\n\n            opacity: [0, 0.7], // Array   遮罩层的透明度  \n\n            delay: 0 // Number  效果延迟时间\n        },\n        css: { // 遮罩层由代码生成，故其样式通过参数传入\n\n            \"z-index\": 9,\n\n            'position': 'fixed',\n\n            'top': 0,\n\n            'left': 0,\n\n            'bottom': 0,\n\n            'right': 0,\n\n            'display': 'none',\n\n            'opacity': 1,\n\n            'background': \"#000000\"\n        }\n\n    },\n    _init: function() {\n        var _css,\n\n            me = this,\n\n            eventNS = this.eventNS,\n\n            opts = this.options,\n\n            $el = this.$el,\n\n            fadeInOut = opts.fadeInOut;\n\n        this._createMask();\n\n        if (ns.isExistWidget('fadeInOut')) {\n\n            if (opts.supportFadeInOut) {\n\n                this.mask.fadeInOut(fadeInOut)\n\n                .on('fadeCompleted', function(e, isInit) {\n\n                    if (isInit) {\n\n                        me.mask.hide();\n\n                        me.trigger('maskClose', me.mask);\n\n                    }\n                });\n\n                $el.fadeInOut({\n\n                    opacity: [0, 1],\n\n                    speed: fadeInOut.speed,\n\n                    delay: fadeInOut.delay,\n\n                    easing: fadeInOut.easing\n\n\n                }).on('fadeCompleted', function(e, isInit) {\n                    if (isInit) {\n                        $el.hide();\n                    }\n                });\n            }\n        } else {\n            throw new Error('fadeInOut组件不存在');\n        }\n\n        this.mask.on('click' + eventNS, function(e) {\n            me.trigger('maskClick', e);\n        });\n    },\n    _createMask: function() {\n\n        var opts = this.options;\n\n        this.mask = $('<div/>').attr(\"id\", ns.Tools.newId()).appendTo('body');\n\n        this.mask.css(opts.css);\n    },\n    /**\n     * 显示遮罩层同时会把应用遮罩层的DOM显示出来\n     * @public\n     * @instance\n     * @memberOf smui.layerMask\n     * @fires fadeCompleted\n     */\n    show: function() {\n\n        var opts = this.options,\n\n            $el = this.$el,\n\n            maskCss = opts.css,\n\n            me = this;\n\n        /**\n         * 遮罩层显示前触发\n         * @instance\n         * @memberOf smui.layerMask\n         * @event maskBeforeLoad\n         * @event maskLoad\n         */\n        me.trigger('maskBeforeLoad');\n\n        this.state = true;\n\n        $el.css('z-index', maskCss['z-index'] + 1);\n\n        if (opts.supportFadeInOut) {\n\n            this.mask.fadeInOut('show');\n\n            $el.fadeInOut('show');\n\n        } else {\n\n            this.mask.show();\n\n            this.$el && this.$el.show();\n        }\n\n\n        /**\n         * 遮罩层显示后触发\n         * @instance\n         * @memberOf smui.layerMask\n         * @event maskLoad\n         */\n        this.trigger('maskLoad', $el);\n    },\n    /**\n     * 隐藏遮罩层同时会把应用遮罩层的DOM隐藏\n     * @public\n     * @instance\n     * @memberOf smui.layerMask\n     * @fires maskClose\n     */\n    hide: function() {\n        var me = this,\n\n            opts = this.options,\n\n            maskCss = opts.css,\n\n            initOpacity = maskCss.opacity[0],\n\n            $el = this.$el;\n\n        this.state = false;\n\n        if (opts.supportFadeInOut) {\n\n            $el.fadeInOut('hide');\n\n            this.mask.fadeInOut('hide');\n\n        } else {\n\n            this.mask.hide();\n\n            $el.hide();\n\n        }\n\n        /**\n         * 遮罩层关闭后触发\n         * @instance\n         * @memberOf smui.layerMask\n         * @event maskClose\n         */\n        me.trigger('maskClose', this.mask);\n\n    },\n    /**\n     * 显示或隐藏遮罩层\n     * @public\n     * @instance\n     * @memberOf smui.layerMask\n     *\n     */\n    toggle: function() {\n\n        this.state ? this.hide() : this.show();\n    },\n    /**\n     * 释放内存\n     * @alias destroy\n     * @instance\n     * @memberOf smui.layerMask\n     */\n    _destroy: function() {\n\n        this.mask.off(this.eventNS);\n\n        $el.fadeInOut('destroy');\n\n    }\n\n})\nrequire('./smui.fadeInOut.js');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.layermask.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\r\n * @file 实现DOM元素的滑动\r\n * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n * @date 2015-1-20\r\n * @class smui.slider\r\n * @version 0.0.1\r\n * @import smui.js smui.transition.js smui.transform.js\r\n */\r\n\r\nvar ns = require('./smui.js'),\r\n\r\n    tools = ns.Tools;\r\n\r\nrequire('./smui.transform');\r\n\r\nrequire('./smui.transition');\r\n\r\n\r\n\r\nns.widget('slider', {\r\n    /**\r\n     * 设置组件初始化参数\r\n     * @type {Object}\r\n     * @memberOf smui.slider\r\n     * @instance\r\n     * @property {String}   direction        方向, 默认水平。horizontal:水平方向，vertical:垂直方向\r\n     * @property {Boolean}  tackCursor       是否跟随光标/手指移动\r\n     * @property {Object}   transition       动画设置{speed:500,easing:'ease',delay:0}\r\n     * @property {Number}   moveDistance     slider移动的距离,默认为父节点的宽高\r\n     * @property {Boolean}  supportSwipe     是否支持swipe事件\r\n     * @property {Number}   slope            用于计算slider的有效区域，取值0-1,不推荐修改\r\n     * @property {Object}   swipe            swipe事件的触发临界值{timeout:500,distance:30}\r\n     */\r\n    options: {\r\n\r\n        direction: 'horizontal',\r\n\r\n        tackCursor: true,\r\n\r\n        transition: {\r\n\r\n            speed: 500,\r\n\r\n            easing: 'ease',\r\n\r\n            delay: 0\r\n        },\r\n\r\n        swipe: {\r\n\r\n            timeout: 500,\r\n\r\n            distance: 30\r\n\r\n        },\r\n\r\n        moveDistance: null,\r\n\r\n        supportSwipe: true,\r\n\r\n        slope: 0.5\r\n    },\r\n    _init: function() {\r\n\r\n        var me, opts, $el, eventNS, transitio, point, start, sTime, slope;\r\n\r\n        me = this;\r\n\r\n        opts = this.options;\r\n\r\n        transition = opts.transition;\r\n\r\n        $el = this.$el;\r\n\r\n        slope = opts.slope;\r\n\r\n        //事件的命名空间\r\n        eventNS = this.eventNS;\r\n\r\n        //记录touch时的坐标，用于计算swipe的有效区域\r\n        point = {};\r\n\r\n        //记录现在的位置\r\n        this.position = 0;\r\n\r\n\r\n        this._pos = 0;\r\n\r\n        this.isHorizontal = opts.direction === 'horizontal';\r\n\r\n\r\n        this.moveDistance = opts.moveDistance || (this.isHorizontal ? $el.parent().width() : $el.parent().height())\r\n\r\n        //触屏时记录的点\r\n        if (this.isHorizontal) {\r\n\r\n            this.prop = 'clientX';\r\n\r\n        } else {\r\n\r\n            this.prop = 'clientY';\r\n\r\n        }\r\n\r\n        $el.transition({\r\n            speed: transition.speed, //Number  过渡的时间（速度）\r\n\r\n            property: 'transform', //String  要过渡的属性        \r\n\r\n            easing: transition.easing, //String  缓动函数\r\n\r\n            delay: transition.delay //Number  淡隐淡出的延迟时间\r\n        });\r\n\r\n        $el.transform({\r\n            is3d: true\r\n        })\r\n\r\n\r\n\r\n        $el.off(eventNS).on('touchstart' + eventNS, function(e) {\r\n\r\n            var touches;\r\n\r\n\r\n\r\n            touches = e.touches[0];\r\n\r\n            point = {\r\n                x: touches['clientX'],\r\n                y: touches['clientY']\r\n            };\r\n\r\n            sTime = Date.now();\r\n\r\n            start = touches[me.prop];\r\n\r\n\r\n            /**\r\n             * 元素触发touchstart事件是触发,这里用于组件利用t-start做扩展\r\n             * @instance\r\n             * @memberOf smui.slider\r\n             * @event t-start\r\n             */\r\n            me.trigger('t-start', [e, me.position]);\r\n\r\n        }).on('touchmove' + eventNS, function(e) {\r\n\r\n            var current, _point, k, touches;\r\n\r\n            touches = e.touches[0];\r\n\r\n            _point = {\r\n                x: touches['clientX'],\r\n                y: touches['clientY']\r\n            };\r\n\r\n            //计算直线的斜率(确定当前用户的滑动是否在有效的区域内)\r\n            k = (_point.y - point.y) / (_point.x - point.x);\r\n\r\n            current = touches[me.prop];\r\n\r\n            //水平方向的跟随\r\n            if (me.isHorizontal && k >= -slope && k <= slope) {\r\n                e.preventDefault()\r\n                me._tackCursor(start, current);\r\n            }\r\n\r\n            //垂直方向的跟随\r\n            if (!me.isHorizontal && (k > slope || k < -slope)) {\r\n                e.preventDefault()\r\n                me._tackCursor(start, current);\r\n            }\r\n\r\n            /**\r\n             * 元素触发touchmove事件是触发,这里用于组件利用t-move做扩展\r\n             * @instance\r\n             * @memberOf smui.slider\r\n             * @event t-move\r\n             */\r\n            me.trigger('t-move', [e, me.position, current - start > 0]);\r\n\r\n\r\n\r\n        }).on('touchend' + eventNS, function(e) {\r\n\r\n            var current, offset, swipeDistanceThreshold, isSwipe;\r\n\r\n            if (!me.isMove) return;\r\n\r\n            isSwipe = opts.supportSwipe && Date.now() - sTime < opts.swipe.timeout;;\r\n\r\n            me.isMove = false;\r\n\r\n            current = e.changedTouches[0][me.prop];\r\n\r\n            offset = current - start;\r\n\r\n            swipeDistanceThreshold = opts.swipe.distance;\r\n\r\n            if (isSwipe) {\r\n                //swiperight || swipedown\r\n                if (offset > swipeDistanceThreshold) {\r\n\r\n                    me.goRightOrDown(me.moveDistance);\r\n\r\n\r\n\r\n                    /**\r\n                     * swipe事件\r\n                     * @instance\r\n                     * @memberOf smui.slider\r\n                     * @event swipe\r\n                     * @example\r\n                     * $('slider').on('swipe',function(e,oe,pos,dir){\r\n                     *     //dir 是方向 1:right或down -1:up或left\r\n                     * })\r\n                     */\r\n                    me.trigger('swipe', [e, me.position, 1]);\r\n\r\n\r\n\r\n                } else if (offset <= swipeDistanceThreshold * (-1)) {\r\n\r\n                    me.goLeftOrUp(me.moveDistance);\r\n                    /**\r\n                     * left | up\r\n                     */\r\n                    me.trigger('swipeLeft', [e, me.position, -1]);\r\n\r\n                    console.log('up')\r\n\r\n                } else {\r\n                    resetPostion();\r\n                }\r\n            } else {\r\n                resetPostion();\r\n            }\r\n\r\n            function resetPostion() {\r\n                    if (!opts.tackCursor) return;\r\n                    me.position = me._pos;\r\n                    me._revisePosition();\r\n                }\r\n                /**\r\n                 * 元素触发touchend事件是触发,这里用于组件利用t-end做扩展\r\n                 * @instance\r\n                 * @memberOf smui.slider\r\n                 * @event t-end\r\n                 */\r\n            me.trigger('t-end', [e, me.position, current - start > 0]);\r\n        });\r\n\r\n    },\r\n    /**\r\n     * 向右或向下移动指定的距离\r\n     * @param  {Number} offset 移动的距离\r\n     * @public\r\n     * @instance\r\n     * @memberOf smui.slider\r\n     *\r\n     */\r\n    goRightOrDown: function(offset) {\r\n        this.position = this.position + offset;\r\n        this._revisePosition();\r\n    },\r\n    /**\r\n     * 向左或向上移动指定的距离\r\n     * @param  {Number} offset 移动的距离\r\n     * @public\r\n     * @instance\r\n     * @memberOf smui.slider\r\n     *\r\n     */\r\n    goLeftOrUp: function(offset) {\r\n        this.position = this.position - offset;\r\n        this._revisePosition();\r\n    },\r\n    /**\r\n     * 获取slider是否是水平方向移动\r\n     * @public\r\n     * @instance\r\n     * @memberOf smui.slider\r\n     *\r\n     */\r\n    isHorizontal: function() {\r\n        return this.isHorizontal;\r\n    },\r\n\r\n    /*\r\n     * 释放鼠标/touch时，对位置做出修正。\r\n     * @private\r\n     *\r\n     */\r\n    _revisePosition: function(pos, speed) {\r\n\r\n        var _pos, wh, $el;\r\n\r\n        _pos = $.isUndefined(pos) ? this.position : pos;\r\n\r\n\r\n        if (_pos > 0) {\r\n\r\n            this._moveTo(0, speed);\r\n            /**\r\n             * 在两端拉动完成触发\r\n             * @instance\r\n             * @memberOf smui.slider\r\n             * @event pulled\r\n             * @example\r\n             * $('.test').on('pulled',function(e,flag){\r\n             *     //flag = 1 是在顶部 或 左侧\r\n             *     //flag = 1 是在底部 或 右侧\r\n             * })\r\n             */\r\n            this.trigger('pulled', 1);\r\n\r\n        } else if (_pos < -(wh = this._outRange())) {\r\n\r\n\r\n            wh < 0 ? this._moveTo(0, speed) : this._moveTo(wh * (-1), speed);\r\n\r\n            this.trigger('pulled', -1);\r\n\r\n        } else {\r\n            this._moveTo(_pos, speed);\r\n        }\r\n\r\n        /*  function outRange(){\r\n\r\n              var $el,$parent;\r\n\r\n              $el     = this.$el;\r\n              \r\n              $parent = $el.parent();\r\n\r\n              return this.isHorizontal ? $el.width() - $parent.width() : $el.height() - $parent.height(); \r\n          }\r\n          console.log(this.position);*/\r\n    },\r\n    /**\r\n     * 用计算最大的移动位置\r\n     * @private\r\n     *\r\n     */\r\n    _outRange: function() {\r\n        var $el, $parent, wh;\r\n\r\n        $el = this.$el;\r\n\r\n        $parent = $el.parent();\r\n\r\n        if (this.isHorizontal) {\r\n            wh = $el.width() - $parent.width();\r\n\r\n        } else {\r\n            wh = $el.height() - $parent.height();\r\n        }\r\n\r\n\r\n        return wh;\r\n    },\r\n\r\n    _moveTo: function(pos, speed) {\r\n\r\n        this.position = pos;\r\n\r\n\r\n        if (typeof speed != 'undefined' && typeof speed === 'number') {\r\n            /*this.$el.css({\r\n                '-webkit-transition-duration': speed / 1000 + 's',\r\n                'transition-duration': speed / 1000 + 's'\r\n            })*/\r\n            this.$el.transition('setDuration', speed / 1000);\r\n        } else {\r\n            this.transition();\r\n        }\r\n        this.translate(pos);\r\n\r\n        this.position = pos;\r\n    },\r\n    /**\r\n     * 移动到指定的位置\r\n     * @param  {Number} pos 移动到的位置\r\n     * @param  {Number} speed 移动的速度\r\n     * @public\r\n     * @instance\r\n     * @memberOf smui.slider\r\n     *\r\n     */\r\n    moveTo: function(pos, speed) {\r\n        this._revisePosition(pos, speed);\r\n    },\r\n\r\n    moveToElement: function(element, speed, center) {\r\n        var $ele, $el, offset, pos, _offset, $parent, reviseValue;\r\n\r\n        $ele = $(element);\r\n\r\n        $el = this.$el;\r\n\r\n        offset = $ele.position();\r\n\r\n        pos = this.position - (this.isHorizontal ? offset.left : offset.top);\r\n\r\n\r\n        if (center) {\r\n\r\n            $parent = $el.parent();\r\n\r\n            if (this.isHorizontal) {\r\n\r\n                reviseValue = ($parent.width() - $ele.width()) / 2;\r\n\r\n            } else {\r\n                reviseValue = ($parent.height() - $ele.height()) / 2;\r\n            }\r\n\r\n            pos = pos + reviseValue;\r\n            console.log(pos);\r\n\r\n        }\r\n\r\n\r\n        this.moveTo(pos, speed);\r\n    },\r\n\r\n    _tackCursor: function(start, current) {\r\n\r\n        if (this.options.tackCursor) {\r\n\r\n            this._pos = this.position + current - start\r\n\r\n            this.transition(0);\r\n\r\n            this.translate(this._pos);\r\n\r\n            if (this._pos > 0) {\r\n                /**\r\n                 * 在两端拉动过程中触发\r\n                 * @instance\r\n                 * @memberOf smui.slider\r\n                 * @event pulling\r\n                 * @example\r\n                 * $('.test').on('pulling',function(e,flag){\r\n                 *     //flag = 1 是在顶部 或 左侧\r\n                 *     //flag = 1 是在底部 或 右侧\r\n                 * })\r\n                 */\r\n                this.trigger('pulling', 1);\r\n            } else if (this._pos < -(this._outRange())) {\r\n                this.trigger('pulling', -1);\r\n            }\r\n        }\r\n\r\n        this.isMove = true;\r\n\r\n    },\r\n    /*\r\n     ** @description 为DOM添加过渡动画属性\r\n     */\r\n    transition: function(speed, easing, delay) {\r\n        var $el, transition, _tran, style;\r\n        $el = this.$el;\r\n        transition = this.options.transition;\r\n        speed = typeof speed == 'undefined' ? transition.speed : speed;\r\n        easing = typeof easing != 'string' ? transition.easing : easing;\r\n        delay = typeof delay == 'undefined' ? transition.delay : delay;\r\n\r\n\r\n        $el.transition('setValue', 'transform', speed, easing, delay);\r\n    },\r\n    /*\r\n     ** @description 为DOM添加平移属性\r\n     */\r\n    translate: function(offset) {\r\n        var $el;\r\n\r\n        $el = this.$el;\r\n\r\n        this.isHorizontal ? $el.transform('translate', offset, 0, 0) : $el.transform('translate', 0, offset);\r\n        //css = this.isHorizontal ? tools.translate(offset) : tools.translate(0, offset);\r\n\r\n        //this.$el.css(css);\r\n    },\r\n    /**\r\n     * 释放内存\r\n     * @alias destroy\r\n     * @instance\r\n     * @memberOf smui.slider\r\n     */\r\n    _destroy: function() {\r\n\r\n        var $el = this.$el;\r\n\r\n        $el.transform('destroy');\r\n\r\n        $el.transition('destroy');\r\n\r\n    }\r\n\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.slider.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\r\n * @file 弹出框\r\n * @author Guo Mingli(mingli.guo@shenma-inc.com)\r\n * @date 2015-1-20\r\n * @version 0.0.1\r\n * @class smui.dialog\r\n * @import  zepto.js smui.js smui.layermadk.js\r\n */\r\n\r\n\r\n\r\nvar ns = require('./smui.js');\r\n\r\nrequire('./smui.layermask');\r\n\r\nns.widget('dialog', {\r\n    /**\r\n     * 设置组件初始化参数\r\n     * @memberOf smui.dialog\r\n     * @instance\r\n     * @type {Object}\r\n     * @property {Boolean}  autoHide    是否自动消失 ,若为true时，默认2000ms自动\r\n     * @property {Boolean}  modal       是否是模态,可以设置为{} 参数请参照smui.layermask\r\n     */\r\n    options: {\r\n\r\n        autoHide: false,\r\n\r\n        modal: false\r\n\r\n    },\r\n\r\n    /*\r\n     ** @description 初始化组件\r\n     */\r\n    _init: function() {\r\n        var $el, opts, eventNS, me;\r\n\r\n        me = this;\r\n\r\n        $el = this.$el\r\n\r\n        opts = this.options;\r\n\r\n        eventNS = this.eventNS;\r\n\r\n        modal = opts.modal;\r\n\r\n        autoHide = opts.autoHide;\r\n\r\n        this.isModal = !!modal;\r\n\r\n        this.isAutoHide = !!autoHide;\r\n\r\n        this.autoHide = $.type(autoHide) === 'number' ? autoHide : 2000;\r\n\r\n\r\n        if (this.isAutoHide) {\r\n            this.autoHide = autoHide\r\n        }\r\n\r\n        if (this.isModal) {\r\n            $el.layerMask($.isPlainObject(modal) ? modal : {});\r\n        }\r\n\r\n        $el.off(eventNS).on('click' + eventNS, '[data-confirm]', function() {\r\n\r\n            me._hide();\r\n            /**\r\n             * 点击确定时触发\r\n             * @instance\r\n             * @memberOf smui.dialog\r\n             * @event confirm\r\n             */\r\n            me.trigger('confirm');\r\n\r\n\r\n\r\n        }).on('click' + eventNS, '[data-cancel]', function() {\r\n\r\n            me._hide();\r\n            /**\r\n             * 点击取消时触发\r\n             * @instance\r\n             * @memberOf smui.dialog\r\n             * @event cancel\r\n             */\r\n            me.trigger('cancel');\r\n\r\n        }).on('click' + eventNS, '[data-close]', function() {\r\n\r\n            me.close();\r\n\r\n\r\n\r\n        })\r\n\r\n\r\n    },\r\n    /**\r\n     * 打开对话框，触发open事件\r\n     * @public\r\n     * @instance\r\n     * @memberOf smui.dialog\r\n     * @fires open\r\n     */\r\n    open: function() {\r\n        var me;\r\n\r\n        me = this;\r\n\r\n        this._show();\r\n\r\n        if (this.isAutoHide) {\r\n            setTimeout(function() {\r\n                me.hide();\r\n                me.trigger('close');\r\n            }, this.autoHide);\r\n        }\r\n        /**\r\n         * 对话框打开时触发\r\n         * @instance\r\n         * @memberOf smui.dialog\r\n         * @event open\r\n         */\r\n        me.trigger('open');\r\n    },\r\n\r\n    _show: function() {\r\n        if (this.isModal) {\r\n            this.$el.layerMask('show');\r\n        } else {\r\n            this.$el.show();\r\n        }\r\n    },\r\n\r\n    _hide: function() {\r\n        if (this.isModal) {\r\n            this.$el.layerMask('hide');\r\n        } else {\r\n            this.$el.hide();\r\n        }\r\n    },\r\n    /**\r\n     * 关闭对话框，触发close事件\r\n     * @public\r\n     * @instance\r\n     * @memberOf smui.dialog\r\n     * @fires close\r\n     */\r\n    close: function() {\r\n        this._hide();\r\n        /**\r\n         * dialog关闭时触发\r\n         * @instance\r\n         * @memberOf smui.dialog\r\n         * @event close\r\n         */\r\n        this.trigger('close');\r\n    },\r\n    /**\r\n     * 释放内存\r\n     * @alias destroy\r\n     * @instance\r\n     * @memberOf smui.dialog\r\n     */\r\n    _destroy: function() {\r\n\r\n        var $el = this.$el;\r\n\r\n        $el.layerMask('destroy');\r\n\r\n    }\r\n\r\n\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.dialog.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\r\n * @file 轮播组件\r\n * @author Guo Mingli (mingli.guo@shenma-inc.com）\r\n * @date 2015-1-20\r\n * @version 0.0.1\r\n * @class smui.carousel\r\n */\r\n\r\nvar ns = require('./smui.js'),\r\n\r\n    tools = ns.Tools;\r\n\r\nrequire('./smui.fadeInOut');\r\n\r\nrequire('./smui.slider');\r\n\r\n\r\nns.widget('carousel', {\r\n    /**\r\n     * 设置组件初始化参数\r\n     * @type {Object}\r\n     * @memberOf smui.carousel\r\n     * @instance\r\n     * @property {Object}   slider           选填,设置slider参数,请参照smui.slider组件\r\n     * @property {Boolean}  isAutoPlay       是否自动开始切换,若为true,则isLoop自动设为true\r\n     * @property {Object}   autoPlay         自动播放的参数{speed:500,direction:'r2l'}。 自动切换时的方向。l2r,r2l,t2b,b2t;\r\n     * @property {Number}   current          当前显示的索引 从0开始\r\n     * @property {Boolean}  isLoop           是否无缝循环切换\r\n     * @property {Number}   loopSpeed        无缝循环时，第一个和最后一个之前的切换时间\r\n     * @property {Boolean}  orientation      是否支持转屏时重新定位\r\n     */\r\n    options: {\r\n\r\n\r\n\r\n        slider: {\r\n            supportSwipe: false\r\n        },\r\n        isAutoPlay: false,\r\n\r\n        autoPlay: {\r\n\r\n            speed: 3000,\r\n\r\n            direction: 'l2r'\r\n        },\r\n\r\n\r\n        current: 0,\r\n\r\n        isLoop: false,\r\n\r\n        loopSpeed: 300,\r\n\r\n        orientation: true\r\n\r\n    },\r\n    _init: function() {\r\n        var opts, me, $el, $items, $carouselList, $carouselContainer, wh, eventNS, orientationName;\r\n\r\n        me = this;\r\n\r\n        $el = this.$el;\r\n\r\n        opts = this.options;\r\n\r\n        eventNS = this.eventNS;\r\n\r\n        $carouselList = $el.find('[data-carousel-list]');\r\n\r\n        this.$carouselList = $carouselList;\r\n\r\n        $carouselContainer = $el.find('[data-carousel-container]');\r\n\r\n        this.$carouselContainer = $carouselContainer;\r\n\r\n        this.speed = this.loopSpeed; //opts.slider.transition && opts.slider.transition.speed || 500;\r\n\r\n        //当前索引\r\n        this.currentIndex = opts.current;\r\n\r\n        this.reviseIndex = null;\r\n\r\n        $items = $el.find('[data-carousel-item]');\r\n\r\n        this.$next = $el.find('[data-carousel-next]');\r\n\r\n        this.$prev = $el.find('[data-carousel-prev]');\r\n\r\n        this.total = $items.length - 1;\r\n\r\n        opts.isLoop = opts.isAutoPlay ? opts.isAutoPlay : opts.isLoop;\r\n\r\n\r\n        if (ns.isExistWidget('slider')) {\r\n\r\n            $carouselList.slider(opts.slider);\r\n\r\n            //是否水平方向轮放\r\n            this.isHorizontal = $carouselList.slider('isHorizontal');\r\n\r\n        } else {\r\n            throw new Error('The lack of dependent files \"smui.slider.js\"')\r\n        }\r\n\r\n\r\n        if (opts.isLoop) {\r\n\r\n            //克隆第一个元素和最后一个元素到列表中               \r\n\r\n            $items.eq(0).before($items.eq($items.length - 1).clone());\r\n\r\n            $carouselList.append($items.eq(0).clone());\r\n\r\n            this.total += 2;\r\n\r\n        }\r\n\r\n        this.$items = $el.find('[data-carousel-item]');\r\n        this._calculateListSize();\r\n\r\n\r\n        this.sliderTo(opts.isLoop ? this.currentIndex + 1 : this.currentIndex, 0);\r\n\r\n        $el.off(eventNS).on('click' + eventNS, '[data-carousel-next]', function(e) {\r\n\r\n            me.next();\r\n\r\n        }).on('click' + eventNS, '[data-carousel-prev]', function(e) {\r\n\r\n            me.prev();\r\n\r\n        }).on('t-end' + eventNS, '[data-carousel-list]', function(e, oe, pos, direction) {\r\n            var absPos, _size, index,\r\n\r\n                abs = Math.abs(pos);\r\n\r\n            _size = me.containerSize;\r\n\r\n            //根据位置计算当前索引\r\n            index = abs / _size;\r\n\r\n            if (direction) {\r\n                index = Math.floor(index);\r\n            } else {\r\n                index = Math.ceil(index);\r\n            }\r\n\r\n            me.index = index;\r\n\r\n            me.sliderTo(me.index);\r\n        });\r\n\r\n        //转屏重新定位\r\n        if (opts.orientation) {\r\n            orientationName = \"onorientationchange\" in window ? 'orientationchange' : 'resize';\r\n            $(window).off('window' + eventNS).on(orientationName + '.window' + eventNS, function(e) {\r\n\r\n                me._calculateListSize();\r\n                me.sliderTo(me.currentIndex);\r\n\r\n            });\r\n        }\r\n\r\n        //自动播发\r\n        if (opts.isAutoPlay) {\r\n\r\n            setTimeout(function() {\r\n\r\n                if (opts.autoPlay.direction == 'l2r' || opts.autoPlay.direction === 't2b') {\r\n                    me.next();\r\n                } else {\r\n                    me.prev();\r\n                }\r\n                setTimeout(arguments.callee, opts.autoPlay.speed);\r\n\r\n            }, opts.autoPlay.speed);\r\n        }\r\n\r\n\r\n    },\r\n\r\n    _reviseIndex: function() {\r\n        var _i, me;\r\n        me = this;\r\n        _i = me.reviseIndex;\r\n        if (typeof _i != 'undefined') {\r\n            // _size = me.containerSize;\r\n            //me.$carouselList.slider('moveTo', (_size * _i) * -1, 0);\r\n            setTimeout(function() {\r\n                me._move(_i, 0);\r\n                setTimeout(function() {\r\n                    me.$carouselList.transition('setDuration', me.speed);\r\n                    /*{\r\n                                               '-webkit-transition-duration': me.speed / 1000 + 's'\r\n                                           })*/\r\n                }, 100);\r\n            }, 300);\r\n\r\n        }\r\n    },\r\n\r\n    _move: function(i, speed) {\r\n        var _size, pos, opts, _i, me;\r\n\r\n        me = this;\r\n\r\n        _size = this.containerSize;\r\n\r\n        pos = _size * i;\r\n\r\n        opts = this.options;\r\n\r\n        this.currentIndex = i;\r\n\r\n        this.$carouselList.slider('moveTo', -pos, speed);\r\n    },\r\n    /**\r\n     * 切换到指定索引位置\r\n     * @memberOf smui.carousel\r\n     * @instance\r\n     * @param  {Number} i 轮播索引\r\n     * @param  {Number} speed 指定的切换动画时间。\r\n     * @fires  slider\r\n     */\r\n    sliderTo: function(i, speed) {\r\n\r\n        var _size, pos, opts, _i, me;\r\n\r\n        _size = this.containerSize;\r\n\r\n        me = this;\r\n\r\n        opts = this.options;\r\n\r\n        this._move(i, speed);\r\n\r\n        //无缝循环切换时，要计算新的index\r\n        if (opts.isLoop) {\r\n\r\n            _i = getNewIndex(i);\r\n\r\n            this.reviseIndex = _i != i ? _i : undefined;\r\n        } else {\r\n\r\n            this.reviseIndex = undefined;\r\n\r\n            if (i == 0) {\r\n                this.$prev.hide();\r\n            } else if (i == this.total) {\r\n                this.$next.hide();\r\n            } else {\r\n                this.$prev.show();\r\n                this.$next.show();\r\n            }\r\n\r\n        }\r\n\r\n        me._reviseIndex();\r\n\r\n\r\n        /**\r\n         * 轮播切换时触发\r\n         * @instance\r\n         * @memberOf smui.carousel\r\n         * @event slider\r\n         */\r\n        me.trigger('slider', opts.isLoop ? (me.reviseIndex || this.currentIndex) - 1 : this.currentIndex);\r\n\r\n        function getNewIndex(n) {\r\n            if (n == me.total) {\r\n                return 1;\r\n            }\r\n\r\n            if (n == 0) {\r\n                return me.total - 1;\r\n            }\r\n\r\n            return n;\r\n        }\r\n\r\n    },\r\n    /**\r\n     * 切换到下一个索引位置\r\n     * @memberOf smui.carousel\r\n     * @instance\r\n     * @fires  slider\r\n     */\r\n    next: function() {\r\n        var i;\r\n        i = this.currentIndex + 1;\r\n        if (i > this.total) {\r\n            i = this.total;\r\n        }\r\n        i != this.currentIndex && this.sliderTo(i);\r\n    },\r\n    /**\r\n     * 切换到上一个索引位置\r\n     * @memberOf smui.carousel\r\n     * @instance\r\n     * @fires  slider\r\n     */\r\n    prev: function() {\r\n        var i;\r\n        i = this.currentIndex - 1;\r\n        if (i < 0) {\r\n            i = 0;\r\n        }\r\n        i != this.currentIndex && this.sliderTo(i);\r\n    },\r\n\r\n    _calculateListSize: function($items) {\r\n\r\n        var opts, len, size, _size, prop, $items;\r\n\r\n        $items = this.$items;\r\n\r\n        len = $items.length;\r\n\r\n        prop = this.isHorizontal ? \"width\" : \"height\";\r\n\r\n        _size = this.$carouselContainer[prop]();\r\n\r\n        this.containerSize = _size;\r\n\r\n        $items[prop](_size);\r\n\r\n        this.$carouselList[prop](_size * len);\r\n\r\n\r\n    },\r\n    /**\r\n     * 释放内存\r\n     * @alias destroy\r\n     * @instance\r\n     * @memberOf smui.carousel\r\n     */\r\n    _destroy: function() {\r\n\r\n        var eventNS = this.eventNS;\r\n\r\n        $(window).off('window' + eventNS);\r\n\r\n        this.$carouselList.slider('destroy');\r\n    }\r\n\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.carousel.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\r\n * @file tab组件或Navigator组件，具体可由css来控制，如果[data-items]的宽度或高度小于或等于.smui-tab的宽或高的话，slider的滑动会失效\r\n * @author Guo Mingli (mingli.guo@shenma-inc.com）\r\n * @date 2015-1-20\r\n \r\n * @version 0.0.1 \r\n * @class smui.tab  \r\n * \r\n **/\r\n\r\n\r\nvar ns = require('./smui.js');\r\nrequire('./smui.slider');\r\nrequire('./smui.history');\r\nns.widget('tab', {\r\n\r\n    /**\r\n     * 设置组件初始化参数\r\n     * @memberOf smui.tab\r\n     * @instance\r\n     * @type {Object}\r\n     * @property {String}  current              当前选中项的标示\r\n     * @property {null | Object}  slider        是否支持滑动 具体参数值参考smui.slider.js\r\n     * @property {boolean}  supportHistory      是否支持选项卡与浏览器历史的前进后退关联在一起\r\n     */\r\n    options: {\r\n        current: 'current',\r\n\r\n        slider: null,\r\n\r\n        supportHistory: false\r\n    },\r\n    /**\r\n     * 初始化组件\r\n     * @private\r\n     * @memberOf smui.tab\r\n     */\r\n    _init: function() {\r\n\r\n        var me, $el, opts, eventNS, current;\r\n\r\n        me = this;\r\n\r\n        $el = this.$el;\r\n\r\n        opts = me.options;\r\n\r\n        eventNS = me.eventNS;\r\n\r\n        current = opts.current.replace(/^\\./, ''),\r\n\r\n            this.$tab = $el.find('[data-items]')\r\n\r\n        this.$tabs = $el.find('[data-item]');\r\n\r\n        //根据用户设定的当前标示，设定当前索引\r\n        this.index = $.inArray($el.find('.' + current).get(0), this.$tabs);\r\n\r\n        //如果用户没有指定当前标示，则默认选中第一个\r\n        if (this.index === -1) {\r\n\r\n            this.$tabs.eq(0).addClass('current');\r\n\r\n            this.index = 0;\r\n\r\n        }\r\n\r\n\r\n        $el.off(eventNS).on('click' + eventNS, '[data-Item]', function(e) {\r\n            /* me.$tab.slider('moveToElement',$(this));*/\r\n            !opts.supportHistory && me._switchTo($(this).index(), e);\r\n\r\n        });\r\n\r\n        //支持slider,则注册。\r\n        if ($.isPlainObject(opts.slider)) {\r\n\r\n            me._openSlider(opts.slider);\r\n\r\n        }\r\n\r\n        if (opts.supportHistory) {\r\n            me._openHistory();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 使组件支持slider\r\n     * @private\r\n     */\r\n    _openSlider: function(options) {\r\n        var $el, opts, $tab, eventNS, me;\r\n\r\n        me = this;\r\n\r\n        $el = this.$el;\r\n\r\n        opts = this.options;\r\n\r\n        $tab = this.$tab;\r\n\r\n        eventNS = this.eventNS;\r\n\r\n        if (!this.isSlider) {\r\n            $tab.slider(options || {});\r\n\r\n            $tab.off(eventNS).on('t-start' + eventNS, function(e, pos, flag) {\r\n\r\n                me.trigger('t-start', [pos, flag]);\r\n\r\n            }).on('t-move' + eventNS, function(e, pos, flag) {\r\n\r\n                me.trigger('t-start', [pos, flag]);\r\n\r\n            }).on('t-end' + eventNS, function(e, pos, flag) {\r\n\r\n                me.trigger('t-end', [pos, flag]);\r\n\r\n            }).on('swipeRight' + eventNS, function(e, pos) {\r\n\r\n                me.trigger('swipeRight', pos);\r\n\r\n            }).on('swipeLeft' + eventNS, function(e, pos) {\r\n\r\n                me.trigger('swipeLeft', pos);\r\n\r\n            }).on('pulling' + eventNS, function(e, flag) {\r\n                console.log(flag);\r\n            }).on('pulled' + eventNS, function(e, flag) {\r\n                console.log(flag);\r\n            });\r\n        }\r\n\r\n        this.isSlider = true;\r\n    },\r\n    /**\r\n     * 使得选项卡与浏览器历史的前进后退关联在一起\r\n     * @private\r\n     */\r\n    _openHistory: function() {\r\n        var me, $el, eventNS;\r\n\r\n        me = this,\r\n\r\n            $el = this.$el,\r\n\r\n            eventNS = this.eventNS;\r\n\r\n        me.history = true;\r\n\r\n        if (ns.isExistWidget('history')) {\r\n\r\n            $el.history();\r\n\r\n            $el.on('history' + eventNS, this.options.tabs, function(e, i, h) {\r\n\r\n                me._switchTo(i, e);\r\n\r\n            });\r\n            //$el.history('hashChange');              \r\n\r\n        } else {\r\n            throw new Error('The lack of dependent files smui.history.js');\r\n        }\r\n    },\r\n    /**\r\n     * 切换到指定的选项\r\n     * @private\r\n     * @param {Number} index 序号\r\n     *\r\n     */\r\n    _switchTo: function(i, e, triggerHistory) {\r\n        var me = this,\r\n            $scope = this.$el,\r\n            opts = me.options,\r\n            current = opts.current.replace(/^\\./, ''),\r\n            eventNS = this.eventNS,\r\n            $tab = me.getTabByIndex(i);\r\n\r\n\r\n\r\n        if ($tab.length == 0) {\r\n            throw new Error('The tab index is out of range');\r\n        }\r\n\r\n        $.isPlainObject(opts.slider) && me.$tab.slider('moveToElement', $tab, null, true);\r\n\r\n        this.index = i;\r\n\r\n        /**\r\n         * 切换tab完成前触发\r\n         * @event beforeSelect\r\n         * @memberOf smui.tab\r\n         */\r\n        me.trigger('beforeSelect', [$tab, i]);\r\n\r\n        me.$tabs.removeClass(current);\r\n\r\n\r\n        //\r\n\r\n        $tab.addClass(current);\r\n\r\n        /**\r\n         * 切换tab完成后触发\r\n         * @event select\r\n         * @instance\r\n         * @memberOf smui.tab\r\n         */\r\n        me.trigger('select', [$tab, i]);\r\n    },\r\n    /**\r\n     * 切换到导航栏的某一项\r\n     * @param {Number} index 序号\r\n     * @public\r\n     * @instance\r\n     * @fires beforeSelect\r\n     * @fires select\r\n     * @memberOf smui.tab\r\n     * @example\r\n     * $('.smui-tab').tab(\"switchTo\",3);\r\n     * //或\r\n     * var tab = new smui.tab($('.smui-tab'),{});\r\n     * tab.switchTo(3);\r\n     */\r\n    switchTo: function(index) {\r\n        return this._switchTo(index);\r\n    },\r\n    /**\r\n     * 获取当前选中的序号\r\n     * @memberOf smui.tab\r\n     * @instance\r\n     * @return {Number} 当前选中项的索引\r\n     */\r\n    getIndex: function() {\r\n        return this.index;\r\n    },\r\n    /**\r\n     * 获取所有的tab\r\n     * @memberOf smui.tab\r\n     * @instance\r\n     * @return {Array} 所有的tab\r\n     */\r\n    getTabs: function() {\r\n        return this.$tabs;\r\n    },\r\n    /**\r\n     * 根据索引号获取tab\r\n     * @memberOf smui.tab\r\n     * @instance\r\n     * @param  {Number} i 索引号\r\n     * @return {Object}   指定的tab的DOM对像\r\n     */\r\n    getTabByIndex: function(i) {\r\n        var tabs = this.$tabs;\r\n        if (i > tabs.length || i < 0) {\r\n            return null;\r\n        }\r\n        return tabs.eq(i);\r\n    },\r\n    /**\r\n     * 获取当前tab\r\n     * @memberOf smui.tab\r\n     * @instance\r\n     * @return {Object} 当前tab的DOM对像\r\n     */\r\n    getCurrentTab: function() {\r\n        var index = this.getIndex();\r\n        return this.getTabByIndex(index);\r\n    },\r\n    /**\r\n     * 切换至下一个tab\r\n     * @instance\r\n     * @memberOf smui.tab\r\n     */\r\n    next: function() {\r\n        var index = this.getIndex() + 1\r\n            //index < this.getLen() && this.switchTo(index);\r\n            //\r\n        index < this.getLen() && this.getTabByIndex(index).trigger('click');\r\n\r\n    },\r\n    /**\r\n     * 切换至上一个tab\r\n     * @instance\r\n     * @memberOf smui.tab\r\n     */\r\n    prev: function() {\r\n        var index = this.getIndex() - 1\r\n            //index >= 0 && this.switchTo(index);\r\n        index >= 0 && this.getTabByIndex(index).trigger('click');\r\n    },\r\n    /**\r\n     * 获取tab的个数\r\n     * @instance\r\n     * @memberOf smui.tab\r\n     */\r\n    getLen: function() {\r\n        return this.getTabs().length;\r\n    },\r\n    /**\r\n     * 释放内存\r\n     * @alias destroy\r\n     * @instance\r\n     * @memberOf smui.tab\r\n     */\r\n    _destroy: function() {\r\n        var eventNS = this.eventNS;\r\n\r\n        this.$tab.off(eventNS);\r\n\r\n        this.historyTool && this.historyTool.destroy();\r\n\r\n        this.isSlider && this.$tab.slider('destroy');\r\n    }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.tab.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * @file 弹出式侧边栏\n * @author Guo Mingli (mingli.guo@shenma-inc.com）\n * @date 2015-1-20\n * @version 0.0.1\n * @class smui.aside\n * @example\n * //Html代码\n * <div class = 'aside'>\n *     //你的侧边栏内容\n * </div>\n * //Js代码\n * $('.aside').aside()\n *\n * // 或者使用实例化对像的方式\n *\n * var aside = new smui.aside($('.aside'),{});\n *\n **/\n\nvar ns = require('./smui.js');\n\nrequire('./smui.transform');\nrequire('./smui.transition');\nrequire('./smui.layermask');\n\nvar offsetObj = function($el, _css) {\n\n    var css = {};\n\n    _css = $.isPlainObject(_css) ? _css : {};\n\n    return {\n\n        hoz: function(size, isLeft) {\n\n            var distance, symbol;\n\n\n            css = {\n\n                'top': _css.top || '0px',\n\n                'bottom': _css.bottom || '0px',\n\n                'width': size || $el.width()\n\n            }\n            if (isLeft) {\n\n                css['left'] = '0px';\n\n                symbol = -1;\n            } else {\n                css['right'] = '0px';\n\n                symbol = 1;\n            }\n\n            $el.css(css);\n\n            distance = symbol * $el.width();\n\n            $el.transform('translate', distance);\n\n\n            return distance;\n\n        },\n\n        ver: function(size, isTop) {\n\n            var distance;\n\n            /*$.extend(css, {\n\n                'left': '0px',\n\n                'right': '0px',\n\n                'height': size || $el.height()\n\n            });*/\n\n            css = {\n\n                'left': _css.left || '0px',\n\n                'right': _css.right || '0px',\n\n                'height': size || $el.height()\n\n\n            }\n\n\n            if (isTop) {\n\n                css['top'] = '0px';\n\n                symbol = -1;\n\n            } else {\n\n                css['bottom'] = '0px';\n\n                symbol = 1;\n            }\n\n            distance = symbol * $el.height();\n\n\n\n            $el.transform('translate', 0, distance);\n\n            $el.css(css);\n\n            return distance;\n\n        },\n\n        l2r: function(size) {\n            return this.hoz(size, true);\n\n        },\n\n        r2l: function(size) {\n            return this.hoz(size, false);\n\n        },\n\n        t2b: function(size) {\n            return this.ver(size, true);\n\n        },\n\n        b2t: function(size) {\n            return this.ver(size, false);\n\n        },\n\n        move: function(direction, distance) {\n\n            direction === 'l2r' || direction === 'r2l' ? $el.transform('translate', distance) : $el.transform('translate', 0, distance);\n\n        }\n    }\n\n}\n\n\n\nns.widget('aside', {\n    /**\n     * 设置组件初始化参数\n     * @type {Object}\n     * @memberOf smui.aside\n     * @instance\n     * @property {String}  direction  侧边栏弹出的方向：l2r：从左向右,r2l：从右向左,t2b：从上向下,b2t：从下向上;\n     * @property {Number}  speed      侧边栏弹出的速度，单位ms\n     * @property {String}  size       侧边栏的大小，具体是width或height与侧边栏弹出方向有关，水平方向，则代表width。\n     * @property {Object | Boolean}   modal 是否出现遮着层,若为fasle 则没有遮罩层，若为{} 则有，具体参数参见{ @link layermask}。\n     * @property {Object | Boolean}   position 定位侧边样，top，bottom 只在侧边栏从水平方向出现时有效;left , right 只在侧边栏从垂直方向出现时有效\n     * @property {Dom | Zepto | selector} contentWrap 主体内容dom，若不传，则默认为aside的next节点\n     * @property {String} display     可选值：('overlay' | 'push') aside出现模式，overlay表示浮层，push表示aside将content推出\n     */\n    options: {\n\n        direction: 'r2l',\n\n        speed: 500,\n\n        size: '50%',\n\n        display: 'overlay',\n\n        contentWrap: '',\n\n        modal: {\n            supportFadeInOut: false,\n\n            css: {\n                'opacity': 0.5\n            }\n        },\n        position: {\n\n            'position': 'fixed',\n\n            'top': '0px',\n\n            'bottom': '0px',\n\n            'left': '0px',\n\n            'right': '0px'\n        }\n    },\n    /**\n     * 初始化组件\n     * @private\n     */\n    _init: function() {\n        var $el, opts, eventNS, me;\n\n        me = this;\n\n        $el = this.$el\n\n        opts = this.options;\n\n        this.display = opts.display;\n\n        this.state = 0;\n\n        eventNS = this.eventNS;\n\n        this._initElement();\n\n        setTimeout(function() {\n            $el.transition({\n                speed: opts.speed,\n\n                delay: 0,\n\n                property: 'transform'\n            });\n        }, opts.speed);\n\n\n        $el.transform();\n\n        if (opts.modal) {\n\n            $el.layerMask($.isPlainObject(opts.modal) ? opts.modal : {});\n\n            $el.off(eventNS).on('maskClick' + eventNS, function(e) {\n                me.hide();\n            });\n        }\n\n        this.$contentWrap = $(opts.contentWrap || $el.next());\n\n    },\n    /**\n     * 初始化组件的DOM\n     * @private\n     */\n    _initElement: function() {\n\n        var $el, css, opts, direction;\n\n        $el = this.$el;\n\n        opts = this.options;\n\n        direction = opts.direction;\n\n        $el.css('position', opts.position.position);\n\n        this.offsetObj = this.offsetObj || offsetObj($el, opts.position);\n\n        //如果DOM元表没有显示的话，是没有办法计算盒计模型的，导至过渡属性不能正常使用\n        $el.show();\n\n        this.distance = this.offsetObj[direction](opts.size);\n\n\n    },\n    /**\n     * 移动DOM\n     * @private\n     */\n    _translate: function(distance, offset) {\n\n        offset = offset || this.offsetObj;\n\n        offset.move(this.options.direction, distance);\n\n    },\n    /**\n     * 显示侧边栏，触发open事件\n     * @public\n     * @instance\n     * @memberOf smui.aside\n     * @fires open\n     */\n    show: function(display) {\n\n        var me = this;\n\n        this.state = !this.state;\n\n        display = display || this.options.display;\n\n        setTimeout(function() {\n\n            me._translate(0);\n\n\n        }, 16);\n\n        if (me.options.modal) {\n\n            me.$el.layerMask('show');\n\n        } else {\n\n            me.$el.show();\n\n        }\n\n        this._displayContentWrap(display, -this.distance);\n\n\n\n        /**\n         * 侧边栏打开时触发\n         * @instance\n         * @memberOf smui.aside\n         * @event open\n         */\n\n\n\n        this.trigger('open', this.distance);\n\n    },\n\n    _displayContentWrap: function(display, distance) {\n        var me = this,\n            opts = this.options;\n\n        this.display = display || this.display;\n\n        if (this.display === 'push') {\n\n            if (!this._contentWrapOffsetObj) {\n                this.$contentWrap.transition({\n                    speed: opts.speed,\n\n                    delay: 0,\n\n                    property: 'transform'\n                });\n                this.$contentWrap.transform();\n\n                this._contentWrapOffsetObj = offsetObj(this.$contentWrap);\n            }\n\n            this._translate(distance, this._contentWrapOffsetObj);\n        }\n    },\n\n    /**\n     * 隐藏侧边栏，触发close事件\n     * @public\n     * @instance\n     * @memberOf smui.aside\n     * @fires open\n     */\n    hide: function(display) {\n\n        var $el = this.$el,\n            me = this;\n\n\n        this.state = !this.state;\n\n        this._translate(this.distance);\n\n        setTimeout(function() {\n            if (me.options.modal) {\n                $el.layerMask('hide');\n            } else {\n                $el.hide();\n            }\n\n\n        }, this.options.speed);\n\n        this._displayContentWrap(display, 0);\n\n        /**\n         * 侧边栏隐藏时触发\n         * @instance\n         * @memberOf smui.aside\n         * @event close\n         */\n        this.trigger('close', this.distance);\n\n    },\n    /**\n     * 释放内存\n     * @alias destroy\n     * @instance\n     * @memberOf smui.aside\n     */\n    _destroy: function() {\n\n        var $el = this.$el;\n\n        this.mask.off(this.eventNS);\n\n        $el.layerMask('destroy');\n\n        $el.translate('destroy');\n\n        $el.transform('destroy');\n\n    },\n    /**\n     * 显示或隐藏侧边栏\n     * @instance\n     * @memberOf smui.aside\n     */\n    toggle: function(display) {\n\n\n        this.state ? this.hide(display) : this.show(display);\n    }\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/smui.aside.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}